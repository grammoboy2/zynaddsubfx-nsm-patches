From 4e36e765f677dbc689461889e502d015c22966a5 Mon Sep 17 00:00:00 2001
From: michiboo <chanmickyyun@gmail.com>
Date: Mon, 24 Jun 2019 16:59:15 +0300
Subject: [PATCH 1377/1936] change watch point name

---
 src/Synth/ADnote.cpp     |  2 +-
 src/Synth/PADnote.cpp    |  2 +-
 src/Synth/SUBnote.cpp    |  2 +-
 src/Synth/WatchPoint.cpp | 44 ++++++++++++++++++++--------------------
 src/Tests/AdNoteTest.h   | 10 ++++-----
 src/Tests/SubNoteTest.h  |  8 ++++----
 src/Tests/WatchTest.h    |  4 +---
 7 files changed, 35 insertions(+), 37 deletions(-)

diff --git a/src/Synth/ADnote.cpp b/src/Synth/ADnote.cpp
index 6bda0ee0..1da9728e 100644
--- a/src/Synth/ADnote.cpp
+++ b/src/Synth/ADnote.cpp
@@ -32,7 +32,7 @@ namespace zyn {
 
 ADnote::ADnote(ADnoteParameters *pars_, SynthParams &spars,
         WatchManager *wm, const char *prefix)
-    :SynthNote(spars), pars(*pars_), watchOut(wm, prefix, "out"), watchOut1(wm,prefix,"out1")
+    :SynthNote(spars), pars(*pars_), watchOut(wm, prefix, "noteout"), watchOut1(wm,prefix,"noteout1")
 {
     memory.beginTransaction();
     tmpwavel = memory.valloc<float>(synth.buffersize);
diff --git a/src/Synth/PADnote.cpp b/src/Synth/PADnote.cpp
index b5207125..efdf7908 100644
--- a/src/Synth/PADnote.cpp
+++ b/src/Synth/PADnote.cpp
@@ -29,7 +29,7 @@ PADnote::PADnote(const PADnoteParameters *parameters,
                  SynthParams pars, const int& interpolation, WatchManager *wm,
                  const char *prefix)
     :SynthNote(pars), pars(*parameters), interpolation(interpolation),
-    watchOut(wm, prefix, "out"), watchOut1(wm,prefix,"out1")
+    watchOut(wm, prefix, "noteout"), watchOut1(wm,prefix,"noteout1")
 {
     NoteGlobalPar.GlobalFilter    = nullptr;
     NoteGlobalPar.FilterEnvelope  = nullptr;
diff --git a/src/Synth/SUBnote.cpp b/src/Synth/SUBnote.cpp
index 32028d6e..886e5eee 100644
--- a/src/Synth/SUBnote.cpp
+++ b/src/Synth/SUBnote.cpp
@@ -45,7 +45,7 @@ SUBnote::SUBnote(const SUBnoteParameters *parameters, SynthParams &spars, WatchM
     GlobalFilterEnvelope(nullptr),
     NoteEnabled(true),
     lfilter(nullptr), rfilter(nullptr),
-    watchOut(wm, prefix, "out"), watchOut1(wm,prefix,"out1")
+    watchOut(wm, prefix, "noteout"), watchOut1(wm,prefix,"noteout1")
 {
     setup(spars.frequency, spars.velocity, spars.portamento, spars.note_log2_freq, false, wm, prefix);
 }
diff --git a/src/Synth/WatchPoint.cpp b/src/Synth/WatchPoint.cpp
index d44177b4..16278462 100644
--- a/src/Synth/WatchPoint.cpp
+++ b/src/Synth/WatchPoint.cpp
@@ -99,23 +99,21 @@ void WatchManager::tick(void)
 {
     //Try to send out any vector stuff
     for(int i=0; i<MAX_WATCH; ++i) {
-        if(sample_list[i]) {
-            int framesize = 2;
-            if(strstr(active_list[i], "Envelope") == NULL || strstr(active_list[i], "Lfo") == NULL)
-                framesize = 127;
-            
-            if(accumulate_index[i] >= framesize){
-                char        arg_types[MAX_SAMPLE+1] = {0};
-                rtosc_arg_t arg_val[MAX_SAMPLE];
-                for(int j=0; j<sample_list[i]; ++j) {
-                    arg_types[j] = 'f';
-                    arg_val[j].f = data_list[i][j];
-                }
-
-                write_back->writeArray(active_list[i], arg_types, arg_val);
-                deactivate[i] = true;
-                accumulate_index[i] = 0;
+        int framesize = 2;
+        if(strstr(active_list[i], "noteout") != NULL)
+            framesize = 128;
+        if(sample_list[i] >= framesize-1) {
+            char        arg_types[MAX_SAMPLE+1] = {0};
+            rtosc_arg_t arg_val[MAX_SAMPLE];
+            printf("\n current accum index:%d  \n",sample_list[i]);
+            for(int j=0; j<sample_list[i]; ++j) {
+                arg_types[j] = 'f';
+                arg_val[j].f = data_list[i][j];
+                printf("%f ",arg_val[i].f);
             }
+            
+            write_back->writeArray(active_list[i], arg_types, arg_val);
+            deactivate[i] = true;
         }
     }
 
@@ -163,7 +161,6 @@ void WatchManager::satisfy(const char *id, float f)
 
 void WatchManager::satisfy(const char *id, float *f, int n)
 {   
-    printf("\nid: %s\n",id);
     int selected = -1;    
     for(int i=0; i<MAX_WATCH; ++i)
         if(!strcmp(active_list[i], id))
@@ -172,17 +169,20 @@ void WatchManager::satisfy(const char *id, float *f, int n)
     if(selected == -1)
         return;
 
-    int space = MAX_SAMPLE - accumulate_index[selected];
-
+    int space = 128 - sample_list[selected];
+    int start = sample_list[selected];
+    
     if(space >= n)
         space = n;
 
     //FIXME buffer overflow
     if(space){
-        for(int i=0; i<space; ++i)
-            data_list[selected][sample_list[selected]++] = f[i];
+        for(int i=0; i<space; ++i){
+            data_list[selected][start] = f[i];
+            start++;
+        }
 
-        accumulate_index[selected] += space;
+        sample_list[selected] += space;
     }
 }
 
diff --git a/src/Tests/AdNoteTest.h b/src/Tests/AdNoteTest.h
index 3ae200ed..bbfdbd2e 100644
--- a/src/Tests/AdNoteTest.h
+++ b/src/Tests/AdNoteTest.h
@@ -133,14 +133,14 @@ class AdNoteTest:public CxxTest::TestSuite
             note->releasekey();
 
             TS_ASSERT(!tr->hasNext());
-            w->add_watch("out");
+            w->add_watch("noteout");
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
+            TS_ASSERT_DELTA(outL[255], -0.4688f, 0.0001f);
             w->tick();
             TS_ASSERT(tr->hasNext());
-            TS_ASSERT_EQUALS(string("out"), tr->read());
+            TS_ASSERT_EQUALS(string("noteout"), tr->read());
             TS_ASSERT(!tr->hasNext());
-            TS_ASSERT_DELTA(outL[255], -0.4688f, 0.0001f);
 
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
@@ -156,12 +156,12 @@ class AdNoteTest:public CxxTest::TestSuite
 
         
             TS_ASSERT(!tr->hasNext());
-            w->add_watch("out1");
+            w->add_watch("noteout1");
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
             w->tick();
             TS_ASSERT(tr->hasNext());
-            TS_ASSERT_EQUALS(string("out1"), tr->read());
+            TS_ASSERT_EQUALS(string("noteout1"), tr->read());
             TS_ASSERT(!tr->hasNext());
         
 
diff --git a/src/Tests/SubNoteTest.h b/src/Tests/SubNoteTest.h
index 793bd4f4..24e4ec0a 100644
--- a/src/Tests/SubNoteTest.h
+++ b/src/Tests/SubNoteTest.h
@@ -132,22 +132,22 @@ class SubNoteTest:public CxxTest::TestSuite
             TS_ASSERT_DELTA(outL[255], -0.0011f, 0.0001f);
             
             TS_ASSERT(!tr->hasNext());
-            w->add_watch("out");
+            w->add_watch("noteout");
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
             w->tick();
             TS_ASSERT(tr->hasNext());
-            TS_ASSERT_EQUALS(string("out"), tr->read());
+            TS_ASSERT_EQUALS(string("noteout"), tr->read());
             TS_ASSERT(!tr->hasNext());
             TS_ASSERT_DELTA(outL[255], -0.0017f, 0.0001f);
 
             TS_ASSERT(!tr->hasNext());
-            w->add_watch("out1");
+            w->add_watch("noteout1");
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
             w->tick();
             TS_ASSERT(tr->hasNext());
-            TS_ASSERT_EQUALS(string("out1"), tr->read());
+            TS_ASSERT_EQUALS(string("noteout1"), tr->read());
             TS_ASSERT(!tr->hasNext());
             TS_ASSERT_DELTA(outL[255], -0.0005f, 0.0001f);
 
diff --git a/src/Tests/WatchTest.h b/src/Tests/WatchTest.h
index 0ccdc773..8cad5a02 100644
--- a/src/Tests/WatchTest.h
+++ b/src/Tests/WatchTest.h
@@ -73,9 +73,7 @@ class WatchTest:public CxxTest::TestSuite
         {
             TS_ASSERT(!tr->hasNext());
             w->add_watch("out");
-            for(int i = 0; i < 64; ++i)
-                l->lfoout();
-       
+            l->lfoout();
             w->tick();
             TS_ASSERT(tr->hasNext());
             TS_ASSERT_EQUALS(string("out"), tr->read());
-- 
2.47.0

