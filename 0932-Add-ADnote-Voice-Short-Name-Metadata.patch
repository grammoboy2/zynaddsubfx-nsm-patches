From 6bb5a6d359127a8c058b77f91426f04502693bd3 Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Fri, 17 Jun 2016 15:27:38 -0400
Subject: [PATCH 0932/1936] Add ADnote-Voice Short Name Metadata

---
 src/Params/ADnoteParameters.cpp | 101 +++++++++++++++++---------------
 1 file changed, 53 insertions(+), 48 deletions(-)

diff --git a/src/Params/ADnoteParameters.cpp b/src/Params/ADnoteParameters.cpp
index 16f07e66..4defe71b 100644
--- a/src/Params/ADnoteParameters.cpp
+++ b/src/Params/ADnoteParameters.cpp
@@ -67,63 +67,68 @@ static const Ports voicePorts = {
     rRecurp(FMAmpEnvelope,  "Modulator Amplitude Envelope"),
     rRecurp(VoiceFilter,    "Optional Voice Filter"),
 
-    rToggle(Enabled, "Voice Enable"),
-    rParamZyn(Unison_size, "Number of subvoices"),
-    rParamZyn(Unison_phase_randomness, "Phase Randomness"),
-    rParamZyn(Unison_frequency_spread, "Subvoice detune"),
-    rParamZyn(Unison_stereo_spread, "Subvoice L/R Separation"),
-    rParamZyn(Unison_vibratto, "Subvoice vibratto"),
-    rParamZyn(Unison_vibratto_speed, "Subvoice vibratto speed"),
-    rOption(Unison_invert_phase, rOptions(none, random, 50%, 33%, 25%), "Subvoice Phases"),
-    rOption(Type, rOptions(Sound,White,Pink), "Type of Sound"),
-    rParamZyn(PDelay, "Voice Startup Delay"),
-    rToggle(Presonance, "Resonance Enable"),
-    rParamI(Pextoscil, rMap(min, -1), rMap(max, 16), "External Oscilator Selection"),
-    rParamI(PextFMoscil, rMap(min, -1), rMap(max, 16), "External FM Oscilator Selection"),
-    rParamZyn(Poscilphase, "Oscillator Phase"),
-    rParamZyn(PFMoscilphase, "FM Oscillator Phase"),
-    rToggle(Pfilterbypass, "Filter Bypass"),
+    rToggle(Enabled,       rShort("enable"), "Voice Enable"),
+    rParamZyn(Unison_size, rShort("size"),   "Number of subvoices"),
+    rParamZyn(Unison_phase_randomness, rShort("ph.rnd."), "Phase Randomness"),
+    rParamZyn(Unison_frequency_spread, rShort("detune"),  "Subvoice detune"),
+    rParamZyn(Unison_stereo_spread,    rShort("spread"),
+            "Subvoice L/R Separation"),
+    rParamZyn(Unison_vibratto,         rShort("vib."),    "Subvoice vibratto"),
+    rParamZyn(Unison_vibratto_speed,   rShort("speed"),
+            "Subvoice vibratto speed"),
+    rOption(Unison_invert_phase,       rShort("inv."),
+            rOptions(none, random, 50%, 33%, 25%), "Subvoice Phases"),
+    rOption(Type,            rShort("type"), rOptions(Sound,White,Pink), "Type of Sound"),
+    rParamZyn(PDelay,        rShort("delay"), "Voice Startup Delay"),
+    rToggle(Presonance,      rShort("enable"), "Resonance Enable"),
+    rParamI(Pextoscil,       rShort("ext."),
+            rMap(min, -1), rMap(max, 16), "External Oscilator Selection"),
+    rParamI(PextFMoscil,     rShort("ext."),
+            rMap(min, -1), rMap(max, 16), "External FM Oscilator Selection"),
+    rParamZyn(Poscilphase,   rShort("phase"),    "Oscillator Phase"),
+    rParamZyn(PFMoscilphase, rShort("phase"),  "FM Oscillator Phase"),
+    rToggle(Pfilterbypass,   rShort("bypass"), "Filter Bypass"),
 
     //Freq Stuff
-    rToggle(Pfixedfreq,           "If frequency is fixed"),
-    rParamZyn(PfixedfreqET,          "Equal Tempermant Parameter"),
-    rParamZyn(PBendAdjust,          "Pitch bend adjustment"),
-    rParamZyn(POffsetHz,          "Voice constant offset"),
-    rParamI(PDetune,              "Fine Detune"),
-    rParamI(PCoarseDetune,        "Coarse Detune"),
-    rParamZyn(PDetuneType,           "Magnitude of Detune"),
-    rToggle(PFreqEnvelopeEnabled, "Frequency Envelope Enable"),
-    rToggle(PFreqLfoEnabled,      "Frequency LFO Enable"),
+    rToggle(Pfixedfreq,           rShort("fixed"),  "If frequency is fixed"),
+    rParamZyn(PfixedfreqET,       rShort("e.t."),   "Equal Tempermant Parameter"),
+    rParamZyn(PBendAdjust,        rShort("bend"),   "Pitch bend adjustment"),
+    rParamZyn(POffsetHz,          rShort("offset"), "Voice constant offset"),
+    rParamI(PDetune,              rShort("fine"),   "Fine Detune"),
+    rParamI(PCoarseDetune,        rShort("coarse"), "Coarse Detune"),
+    rParamZyn(PDetuneType,        rShort("type"),   "Magnitude of Detune"),
+    rToggle(PFreqEnvelopeEnabled, rShort("enable"), "Frequency Envelope Enable"),
+    rToggle(PFreqLfoEnabled,      rShort("enable"), "Frequency LFO Enable"),
 
     //Amplitude Stuff
-    rParamZyn(PPanning,                  "Panning"),
-    rParamZyn(PVolume,                   "Volume"),
-    rToggle(PVolumeminus,             "Signal Inverter"), //do we really need this??
-    rParamZyn(PAmpVelocityScaleFunction, "Velocity Sensing"),
-    rToggle(PAmpEnvelopeEnabled,      "Amplitude Envelope Enable"),
-    rToggle(PAmpLfoEnabled,           "Amplitude LFO Enable"),
+    rParamZyn(PPanning,                  rShort("pan."), "Panning"),
+    rParamZyn(PVolume,                   rShort("vol."), "Volume"),
+    rToggle(PVolumeminus,                rShort("inv."), "Signal Inverter"), //do we really need this??
+    rParamZyn(PAmpVelocityScaleFunction, rShort("sense"), "Velocity Sensing"),
+    rToggle(PAmpEnvelopeEnabled, rShort("enable"), "Amplitude Envelope Enable"),
+    rToggle(PAmpLfoEnabled,      rShort("enable"), "Amplitude LFO Enable"),
 
     //Filter Stuff
-    rToggle(PFilterEnabled,         "Filter Enable"),
-    rToggle(PFilterEnvelopeEnabled, "Filter Envelope Enable"),
-    rToggle(PFilterLfoEnabled,      "Filter LFO Enable"),
-    rParamZyn(PFilterVelocityScale, "Filter Velocity Magnitude"),
-    rParamZyn(PFilterVelocityScaleFunction, "Filter Velocity Function Shape"),
+    rToggle(PFilterEnabled,         rShort("enable"), "Filter Enable"),
+    rToggle(PFilterEnvelopeEnabled, rShort("enable"), "Filter Envelope Enable"),
+    rToggle(PFilterLfoEnabled,      rShort("enable"), "Filter LFO Enable"),
+    rParamZyn(PFilterVelocityScale,         rShort("v.scale"), "Filter Velocity Magnitude"),
+    rParamZyn(PFilterVelocityScaleFunction, rShort("v.sense"), "Filter Velocity Function Shape"),
 
 
     //Modulator Stuff
-    rOption(PFMEnabled, rOptions(none, morph, ring modulation, phase modulation,
-                frequency modulation, pitch modulation), "Modulator mode"),
-    rParamI(PFMVoice,                "Modulator Oscillator Selection"),
-    rParamZyn(PFMVolume,                "Modulator Magnitude"),
-    rParamZyn(PFMVolumeDamp,            "Modulator HF dampening"),
-    rParamZyn(PFMVelocityScaleFunction, "Modulator Velocity Function"),
-    rParamI(PFMDetune,               "Modulator Fine Detune"),
-    rParamI(PFMCoarseDetune,         "Modulator Coarse Detune"),
-    rParamZyn(PFMDetuneType,            "Modulator Detune Magnitude"),
-    rToggle(PFMFixedFreq,            "Modulator Frequency Fixed"),
-    rToggle(PFMFreqEnvelopeEnabled,  "Modulator Frequency Envelope"),
-    rToggle(PFMAmpEnvelopeEnabled,   "Modulator Amplitude Envelope"),
+    rOption(PFMEnabled, rShort("mode"), rOptions(none, morph, ring, phase,
+                frequency, pitch), "Modulator mode"),
+    rParamI(PFMVoice,                   rShort("voice"),  "Modulator Oscillator Selection"),
+    rParamZyn(PFMVolume,                rShort("vol."),   "Modulator Magnitude"),
+    rParamZyn(PFMVolumeDamp,            rShort("damp."),  "Modulator HF dampening"),
+    rParamZyn(PFMVelocityScaleFunction, rShort("sense"),  "Modulator Velocity Function"),
+    rParamI(PFMDetune,                  rShort("fine"),   "Modulator Fine Detune"),
+    rParamI(PFMCoarseDetune,            rShort("coarse"), "Modulator Coarse Detune"),
+    rParamZyn(PFMDetuneType,            rShort("type"),   "Modulator Detune Magnitude"),
+    rToggle(PFMFixedFreq,               rShort("fixed"),  "Modulator Frequency Fixed"),
+    rToggle(PFMFreqEnvelopeEnabled,  rShort("enable"), "Modulator Frequency Envelope"),
+    rToggle(PFMAmpEnvelopeEnabled,   rShort("enable"), "Modulator Amplitude Envelope"),
 
 
     //weird stuff for PCoarseDetune
-- 
2.47.0

