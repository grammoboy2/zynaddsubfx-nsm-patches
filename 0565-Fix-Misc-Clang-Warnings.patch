From b7d80385884097028df45cda298371f7130f8b5c Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Mon, 5 Oct 2015 20:27:05 -0400
Subject: [PATCH 0565/1936] Fix Misc Clang Warnings

---
 src/Containers/NotePool.h    |  2 +-
 src/Effects/EffectMgr.h      |  1 -
 src/Misc/Master.cpp          |  2 +-
 src/Misc/MiddleWare.cpp      | 30 +++++++++++++++---------------
 src/Misc/PresetExtractor.cpp | 12 ++----------
 src/Tests/UnisonTest.h       |  2 +-
 src/UI/ConfigUI.fl           |  2 +-
 src/UI/ConnectionDummy.cpp   |  2 +-
 src/UI/EnvelopeFreeEdit.cpp  |  6 ++++--
 src/UI/Fl_Osc_ListView.cpp   |  4 ++--
 src/UI/Fl_Osc_Pane.cpp       |  2 +-
 src/UI/NioUI.cpp             | 17 ++++++++---------
 src/UI/Osc_DataModel.h       |  4 ++--
 src/UI/Osc_IntModel.h        |  4 ++--
 src/UI/Osc_ListModel.h       |  4 ++--
 src/UI/Osc_SimpleListModel.h |  4 ++--
 src/UI/PresetsUI.fl          |  4 ++--
 17 files changed, 47 insertions(+), 55 deletions(-)

diff --git a/src/Containers/NotePool.h b/src/Containers/NotePool.h
index 4aded172..91e3f633 100644
--- a/src/Containers/NotePool.h
+++ b/src/Containers/NotePool.h
@@ -6,7 +6,7 @@
 //Expected upper bound of synths given that max polyphony is hit
 #define EXPECTED_USAGE 3
 
-class LegatoParams;
+struct LegatoParams;
 class NotePool
 {
     public:
diff --git a/src/Effects/EffectMgr.h b/src/Effects/EffectMgr.h
index a7b53f53..cc996820 100644
--- a/src/Effects/EffectMgr.h
+++ b/src/Effects/EffectMgr.h
@@ -80,7 +80,6 @@ class EffectMgr:public Presets
     private:
 
         //Parameters Prior to initialization
-        char effect_id;
         char preset;
         char settings[128];
 
diff --git a/src/Misc/Master.cpp b/src/Misc/Master.cpp
index 669c1abe..f713b098 100644
--- a/src/Misc/Master.cpp
+++ b/src/Misc/Master.cpp
@@ -292,7 +292,7 @@ Master::Master(const SYNTH_T &synth_, Config* config)
     :HDDRecorder(synth_), ctl(synth_),
     microtonal(config->cfg.GzipCompression), bank(config),
     midi(Master::ports), frozenState(false), pendingMemory(false),
-    synth(synth_), gzip_compression(config->cfg.GzipCompression), time(synth)
+    synth(synth_), time(synth), gzip_compression(config->cfg.GzipCompression)
 {
     bToU = NULL;
     uToB = NULL;
diff --git a/src/Misc/MiddleWare.cpp b/src/Misc/MiddleWare.cpp
index f2fbf7c2..91ce56f5 100644
--- a/src/Misc/MiddleWare.cpp
+++ b/src/Misc/MiddleWare.cpp
@@ -433,13 +433,13 @@ namespace Nio
     using std::get;
     using rtosc::rtMsg;
     rtosc::Ports ports = {
-        {"sink-list:", 0, 0, [](const char *msg, rtosc::RtData &d) {
+        {"sink-list:", 0, 0, [](const char *, rtosc::RtData &d) {
                 auto list = Nio::getSinks();
                 char *ret = rtosc_splat(d.loc, list);
                 d.reply(ret);
                 delete [] ret;
             }},
-        {"source-list:", 0, 0, [](const char *msg, rtosc::RtData &d) {
+        {"source-list:", 0, 0, [](const char *, rtosc::RtData &d) {
                 auto list = Nio::getSources();
                 char *ret = rtosc_splat(d.loc, list);
                 d.reply(ret);
@@ -489,7 +489,7 @@ public:
     void doReadOnlyOp(std::function<void()> read_only_fn);
 
 
-    void saveBankSlot(int npart, int nslot, Master *master, Fl_Osc_Interface *osc)
+    void saveBankSlot(int npart, int nslot, Master *master)
     {
         int err = 0;
         doReadOnlyOp([master,nslot,npart,&err](){
@@ -502,7 +502,7 @@ public:
         }
     }
 
-    void renameBankSlot(int slot, string name, Master *master, Fl_Osc_Interface *osc)
+    void renameBankSlot(int slot, string name, Master *master)
     {
         int err = master->bank.setname(slot, name, -1);
         if(err) {
@@ -513,7 +513,7 @@ public:
         }
     }
 
-    void swapBankSlot(int slota, int slotb, Master *master, Fl_Osc_Interface *osc)
+    void swapBankSlot(int slota, int slotb, Master *master)
     {
         int err = master->bank.swapslot(slota, slotb);
         if(err) {
@@ -524,7 +524,7 @@ public:
         }
     }
 
-    void clearBankSlot(int slot, Master *master, Fl_Osc_Interface *osc)
+    void clearBankSlot(int slot, Master *master)
     {
         int err = master->bank.clearslot(slot);
         if(err) {
@@ -564,7 +564,7 @@ public:
             bank.loadbank(bank.banks[par].dir);
     }
 
-    void loadPart(int npart, const char *filename, Master *master, Fl_Osc_Interface *osc)
+    void loadPart(int npart, const char *filename, Master *master)
     {
         actual_load[npart]++;
 
@@ -991,7 +991,7 @@ void MiddleWareImpl::bToUhandle(const char *rtmsg, bool dummy)
         uToB->write("/add-rt-memory", "bi", sizeof(void*), &mem, N);
     } else if(!strcmp(rtmsg, "/setprogram")
             && !strcmp(rtosc_argument_string(rtmsg),"cc")) {
-        loadPart(rtosc_argument(rtmsg,0).i, master->bank.ins[rtosc_argument(rtmsg,1).i].filename.c_str(), master, osc);
+        loadPart(rtosc_argument(rtmsg,0).i, master->bank.ins[rtosc_argument(rtmsg,1).i].filename.c_str(), master);
     } else if(!strcmp(rtmsg, "/setbank")
             && !strcmp(rtosc_argument_string(rtmsg), "c")) {
         loadPendingBank(rtosc_argument(rtmsg,0).i, master->bank);
@@ -1212,22 +1212,22 @@ void MiddleWareImpl::handleMsg(const char *msg)
         loadMaster(NULL);
     } else if(!strcmp(msg, "/load_xiz") && !strcmp(rtosc_argument_string(msg), "is")) {
         pending_load[rtosc_argument(msg,0).i]++;
-        loadPart(rtosc_argument(msg,0).i, rtosc_argument(msg,1).s, master, osc);
+        loadPart(rtosc_argument(msg,0).i, rtosc_argument(msg,1).s, master);
     } else if(strstr(msg, "load-part") && !strcmp(rtosc_argument_string(msg), "is")) {
         pending_load[rtosc_argument(msg,0).i]++;
-        loadPart(rtosc_argument(msg,0).i, rtosc_argument(msg,1).s, master, osc);
+        loadPart(rtosc_argument(msg,0).i, rtosc_argument(msg,1).s, master);
     } else if(!strcmp(msg, "/setprogram")
             && !strcmp(rtosc_argument_string(msg),"c")) {
         pending_load[0]++;
-        loadPart(0, master->bank.ins[rtosc_argument(msg,0).i].filename.c_str(), master, osc);
+        loadPart(0, master->bank.ins[rtosc_argument(msg,0).i].filename.c_str(), master);
     } else if(strstr(msg, "save-bank-part") && !strcmp(rtosc_argument_string(msg), "ii")) {
-        saveBankSlot(rtosc_argument(msg,0).i, rtosc_argument(msg,1).i, master, osc);
+        saveBankSlot(rtosc_argument(msg,0).i, rtosc_argument(msg,1).i, master);
     } else if(strstr(msg, "bank-rename") && !strcmp(rtosc_argument_string(msg), "is")) {
-        renameBankSlot(rtosc_argument(msg,0).i, rtosc_argument(msg,1).s, master, osc);
+        renameBankSlot(rtosc_argument(msg,0).i, rtosc_argument(msg,1).s, master);
     } else if(strstr(msg, "swap-bank-slots") && !strcmp(rtosc_argument_string(msg), "ii")) {
-        swapBankSlot(rtosc_argument(msg,0).i, rtosc_argument(msg,1).i, master, osc);
+        swapBankSlot(rtosc_argument(msg,0).i, rtosc_argument(msg,1).i, master);
     } else if(strstr(msg, "clear-bank-slot") && !strcmp(rtosc_argument_string(msg), "i")) {
-        clearBankSlot(rtosc_argument(msg,0).i, master, osc);
+        clearBankSlot(rtosc_argument(msg,0).i, master);
     } else if(strstr(msg, "/config/")) {
         handleConfig(msg);
     } else if(strstr(msg, "/presets/")) {
diff --git a/src/Misc/PresetExtractor.cpp b/src/Misc/PresetExtractor.cpp
index eebe2053..4bb17915 100644
--- a/src/Misc/PresetExtractor.cpp
+++ b/src/Misc/PresetExtractor.cpp
@@ -30,7 +30,7 @@ static void dummy(const char *, rtosc::RtData&) {}
 const rtosc::Ports real_preset_ports =
 {
     {"scan-for-presets:", 0, 0,
-        [](const char *msg, rtosc::RtData &d) {
+        [](const char *, rtosc::RtData &d) {
             MiddleWare &mw = *(MiddleWare*)d.obj;
             mw.getPresetsStore().scanforpresets();
             auto &pre = mw.getPresetsStore().presets;
@@ -83,7 +83,7 @@ const rtosc::Ports real_preset_ports =
                 assert(false && "bad arguments");
         }},
     {"clipboard-type:", 0, 0,
-        [](const char *msg, rtosc::RtData &d) {
+        [](const char *, rtosc::RtData &d) {
             const MiddleWare &mw = *(MiddleWare*)d.obj;
             d.reply(d.loc, "s", mw.getPresetsStore().clipboard.type.c_str());
         }},
@@ -123,14 +123,6 @@ const rtosc::Ports preset_ports
 //Synth/Resonance.cpp:    setpresettype("Presonance");
 
 
-//Translate newer symbols to old preset types
-std::vector<string> translate_preset_types(std::string metatype)
-{
-    std::vector<string> results;
-    return results;
-}
-
-
 /*****************************************************************************
  *                     Implementation Methods                                *
  *****************************************************************************/
diff --git a/src/Tests/UnisonTest.h b/src/Tests/UnisonTest.h
index a89fb6da..e207272f 100644
--- a/src/Tests/UnisonTest.h
+++ b/src/Tests/UnisonTest.h
@@ -93,7 +93,7 @@ class AdNoteTest:public CxxTest::TestSuite
         void run_test(int a, int b, int c, int d, int e, int f, float values[4])
         {
             sprng(0);
-            params->set_unison_size_index(0,a);
+            //params->set_unison_size_index(0,a);
             params->VoicePar[0].Unison_frequency_spread = b;
             params->VoicePar[0].Unison_stereo_spread    = c;
             params->VoicePar[0].Unison_vibratto         = d;
diff --git a/src/UI/ConfigUI.fl b/src/UI/ConfigUI.fl
index b9b15d28..5d01b634 100644
--- a/src/UI/ConfigUI.fl
+++ b/src/UI/ConfigUI.fl
@@ -293,7 +293,7 @@ activatebutton_presetdir(true);}
     oscilsize->callback = [this](int i){
         oscilsize_widget->value(i-7);
     };
-    oscilsize->update("/config/cfg.OscilPower");
+    oscilsize->doUpdate("/config/cfg.OscilPower");
     
     } {}
   }
diff --git a/src/UI/ConnectionDummy.cpp b/src/UI/ConnectionDummy.cpp
index 3aef4a2b..15a702b9 100644
--- a/src/UI/ConnectionDummy.cpp
+++ b/src/UI/ConnectionDummy.cpp
@@ -1,7 +1,7 @@
 #include "Connection.h"
 #include <unistd.h>
 namespace GUI {
-ui_handle_t createUi(Fl_Osc_Interface*, void *exit)
+ui_handle_t createUi(Fl_Osc_Interface*, void *)
 {
     return 0;
 }
diff --git a/src/UI/EnvelopeFreeEdit.cpp b/src/UI/EnvelopeFreeEdit.cpp
index 8a4d1856..c4d5dec3 100644
--- a/src/UI/EnvelopeFreeEdit.cpp
+++ b/src/UI/EnvelopeFreeEdit.cpp
@@ -147,8 +147,10 @@ void EnvelopeFreeEdit::draw(void)
     for (int i=1; i<npoints; ++i){
         oldxx=xx;oldyy=yy;
         xx=getpointx(i);yy=getpointy(i);
-        if (i==currentpoint || ctrldown && i==lastpoint) fl_color(FL_RED);
-        else fl_color(alb);
+        if (i==currentpoint || (ctrldown && i==lastpoint))
+            fl_color(FL_RED);
+        else
+            fl_color(alb);
         fl_line(ox+oldxx,oy+oldyy,ox+xx,oy+yy);
         fl_rectf(ox+xx-3,oy+yy-3,6,6);
     }
diff --git a/src/UI/Fl_Osc_ListView.cpp b/src/UI/Fl_Osc_ListView.cpp
index 4d6293e1..8ca03a72 100644
--- a/src/UI/Fl_Osc_ListView.cpp
+++ b/src/UI/Fl_Osc_ListView.cpp
@@ -22,7 +22,7 @@ void Fl_Osc_ListView::init(const char *path_)
     path = path_;
     data = new Osc_SimpleListModel(osc);
     data->callback = [this](Osc_SimpleListModel::list_t l){this->doUpdate(l);};
-    data->update(loc+path_);
+    data->doUpdate(loc+path_);
 }
 
 void Fl_Osc_ListView::doUpdate(Osc_SimpleListModel::list_t l)
@@ -34,7 +34,7 @@ void Fl_Osc_ListView::doUpdate(Osc_SimpleListModel::list_t l)
 }
 void Fl_Osc_ListView::update(void)
 {
-    data->update(loc+path);
+    data->doUpdate(loc+path);
 }
 
 void Fl_Osc_ListView::insert(std::string s, int offset)
diff --git a/src/UI/Fl_Osc_Pane.cpp b/src/UI/Fl_Osc_Pane.cpp
index c1eac185..1b93f6fa 100644
--- a/src/UI/Fl_Osc_Pane.cpp
+++ b/src/UI/Fl_Osc_Pane.cpp
@@ -15,7 +15,7 @@ Fl_Osc_Window::Fl_Osc_Window(int w, int h, const char *L)
 void Fl_Osc_Window::init(Fl_Osc_Interface *osc_, std::string loc_)
 {
     title_ext  = new Osc_DataModel(osc_);
-    title_ext->update("/ui/title");
+    title_ext->doUpdate("/ui/title");
     title_ext->callback = [this](string next) {
         title_new = title_orig + next;
         this->label(title_new.c_str());
diff --git a/src/UI/NioUI.cpp b/src/UI/NioUI.cpp
index 45e476a4..a379d869 100644
--- a/src/UI/NioUI.cpp
+++ b/src/UI/NioUI.cpp
@@ -57,7 +57,7 @@ class Fl_Osc_StrChoice:public Fl_Choice, public Fl_Osc_Widget
             cb_data.first = cb;
             cb_data.second = p;
         }
-        
+
         void cb(void)
         {
             assert(osc);
@@ -67,7 +67,6 @@ class Fl_Osc_StrChoice:public Fl_Choice, public Fl_Osc_Widget
                 cb_data.first(this, cb_data.second);
         }
     private:
-        int min;
         std::pair<Fl_Callback*, void*> cb_data;
 };
 static void callback_fn_choice_nio(Fl_Widget *w, void *)
@@ -111,9 +110,9 @@ NioUI::NioUI(Fl_Osc_Interface *osc)
         for(auto io:list)
             audio->add(io.c_str());
     };
-    
-    midi_opt->update("/io/source-list");
-    audio_opt->update("/io/sink-list");
+
+    midi_opt->doUpdate("/io/source-list");
+    audio_opt->doUpdate("/io/sink-list");
 
     resizable(this);
     size_range(400, 300);
@@ -124,19 +123,19 @@ NioUI::~NioUI()
 
 void NioUI::refresh()
 {
-    midi_opt->update("/io/source-list");
-    audio_opt->update("/io/sink-list");
+    midi_opt->doUpdate("/io/source-list");
+    audio_opt->doUpdate("/io/sink-list");
     midi->update();
     audio->update();
 }
 
-void NioUI::midiCallback(Fl_Widget *c)
+void NioUI::midiCallback(Fl_Widget *)
 {
     //bool good = Nio::setSource(static_cast<Fl_Choice *>(c)->text());
     //static_cast<Fl_Choice *>(c)->textcolor(fl_rgb_color(255 * !good, 0, 0));
 }
 
-void NioUI::audioCallback(Fl_Widget *c)
+void NioUI::audioCallback(Fl_Widget *)
 {
     //bool good = Nio::setSink(static_cast<Fl_Choice *>(c)->text());
     //static_cast<Fl_Choice *>(c)->textcolor(fl_rgb_color(255 * !good, 0, 0));
diff --git a/src/UI/Osc_DataModel.h b/src/UI/Osc_DataModel.h
index ebde39d1..72ef62ca 100644
--- a/src/UI/Osc_DataModel.h
+++ b/src/UI/Osc_DataModel.h
@@ -17,7 +17,7 @@ class Osc_DataModel:public Fl_Osc_Widget
         value_t value;
         std::function<void(value_t)> callback;
 
-        void update(std::string url)
+        void doUpdate(std::string url)
         {
             if(!ext.empty())
                 osc->removeLink(this);
@@ -26,7 +26,7 @@ class Osc_DataModel:public Fl_Osc_Widget
 
             oscRegister(ext.c_str());
         }
-        
+
         //Raw messages
         virtual void OSC_raw(const char *msg)
         {
diff --git a/src/UI/Osc_IntModel.h b/src/UI/Osc_IntModel.h
index 4fe297b6..e0167816 100644
--- a/src/UI/Osc_IntModel.h
+++ b/src/UI/Osc_IntModel.h
@@ -23,7 +23,7 @@ class Osc_IntModel:public Fl_Osc_Widget
             oscWrite(ext, "i", v);
         }
 
-        void update(std::string url)
+        void doUpdate(std::string url)
         {
             if(!ext.empty())
                 osc->removeLink(this);
@@ -31,7 +31,7 @@ class Osc_IntModel:public Fl_Osc_Widget
 
             oscRegister(ext.c_str());
         }
-        
+
         //Raw messages
         virtual void OSC_raw(const char *msg)
         {
diff --git a/src/UI/Osc_ListModel.h b/src/UI/Osc_ListModel.h
index 3e096ddb..c00de0b9 100644
--- a/src/UI/Osc_ListModel.h
+++ b/src/UI/Osc_ListModel.h
@@ -18,7 +18,7 @@ class Osc_ListModel:public Fl_Osc_Widget
         std::function<void(list_t)> callback;
         unsigned list_size;
 
-        void update(std::string url)
+        void doUpdate(std::string url)
         {
             if(!ext.empty())
                 osc->removeLink(this);
@@ -26,7 +26,7 @@ class Osc_ListModel:public Fl_Osc_Widget
 
             oscRegister(ext.c_str());
         }
-        
+
         //Raw messages
         virtual void OSC_raw(const char *msg)
         {
diff --git a/src/UI/Osc_SimpleListModel.h b/src/UI/Osc_SimpleListModel.h
index db0f5171..3d8a07e5 100644
--- a/src/UI/Osc_SimpleListModel.h
+++ b/src/UI/Osc_SimpleListModel.h
@@ -18,7 +18,7 @@ class Osc_SimpleListModel:public Fl_Osc_Widget
         std::function<void(list_t)> callback;
         unsigned list_size;
 
-        void update(std::string url)
+        void doUpdate(std::string url)
         {
             if(!ext.empty())
                 osc->removeLink(this);
@@ -47,7 +47,7 @@ class Osc_SimpleListModel:public Fl_Osc_Widget
             rtosc_amessage(buffer, sizeof(buffer), ext.c_str(), types, args);
             osc->writeRaw(buffer);
         }
-        
+
         //Raw messages
         virtual void OSC_raw(const char *msg)
         {
diff --git a/src/UI/PresetsUI.fl b/src/UI/PresetsUI.fl
index 3b67efa4..f329d5a0 100644
--- a/src/UI/PresetsUI.fl
+++ b/src/UI/PresetsUI.fl
@@ -60,7 +60,7 @@ class PresetsUI {} {
                 printf("Value = %s\\n", val.c_str());
                 copytypetext->label(val.c_str());
                 pastetypetext->label(val.c_str());
-                listmodel.update("/presets/scan-for-presets");
+                listmodel.doUpdate("/presets/scan-for-presets");
             };
         
         } {}
@@ -268,7 +268,7 @@ class PresetsUI {} {
             pastebrowse->clear();
 
             printf("Datamodel Update...");
-            datamodel.update(url+"preset-type");
+            datamodel.doUpdate(url+"preset-type");
             } {}
     }
     decl {std::string url;} {public local
-- 
2.47.0

