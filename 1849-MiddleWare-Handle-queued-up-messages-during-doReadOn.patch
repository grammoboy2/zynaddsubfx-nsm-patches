From 54ef32a109dc84a10dc8c89494c561b7868c5e07 Mon Sep 17 00:00:00 2001
From: Ricard Wanderlof <polluxsynth@butoba.net>
Date: Mon, 11 Apr 2022 07:16:34 +0200
Subject: [PATCH 1849/1936] MiddleWare: Handle queued up messages during
 doReadOnlyOp

Correctly handle messages that have been queued up from the backend
while performing a doReadOnlyOp, rather than sending them
back to backend.

This gets rid of messages like the following when doing a write
operation from the UI:

    Unknown address<BACKEND:online> /vu-meter:ffffffffffffffffffffffffffffffffffffff
    Unknown address<BACKEND:online> /broadcast:
    Unknown address<BACKEND:online> /active_keys:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
---
 src/Misc/MiddleWare.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/Misc/MiddleWare.cpp b/src/Misc/MiddleWare.cpp
index 643da4eb..89c29649 100644
--- a/src/Misc/MiddleWare.cpp
+++ b/src/Misc/MiddleWare.cpp
@@ -2073,7 +2073,7 @@ void MiddleWareImpl::doReadOnlyOp(std::function<void()> read_only_fn)
     //Now to resume normal operations
     uToB->write("/thaw_state","");
     for(auto x:fico) {
-        uToB->raw_write(x);
+        bToUhandle(x);
         delete [] x;
     }
 }
@@ -2180,7 +2180,7 @@ bool MiddleWareImpl::doReadOnlyOpNormal(std::function<void()> read_only_fn, bool
         //Now to resume normal operations
         uToB->write("/thaw_state","");
         for(auto x:fico) {
-            uToB->raw_write(x);
+            bToUhandle(x);
             delete [] x;
         }
         return false;
@@ -2196,7 +2196,7 @@ bool MiddleWareImpl::doReadOnlyOpNormal(std::function<void()> read_only_fn, bool
     //Now to resume normal operations
     uToB->write("/thaw_state","");
     for(auto x:fico) {
-        uToB->raw_write(x);
+        bToUhandle(x);
         delete [] x;
     }
     return true;
-- 
2.47.0

