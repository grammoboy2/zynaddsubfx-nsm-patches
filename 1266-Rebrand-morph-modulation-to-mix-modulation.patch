From ce6a9ab0ad01352a63cf340676d82e1d8c6500e5 Mon Sep 17 00:00:00 2001
From: Daniel Sheeler <dsheeler@pobox.com>
Date: Mon, 28 May 2018 20:00:07 -0500
Subject: [PATCH 1266/1936] Rebrand "morph" modulation to "mix" modulation

---
 src/Params/ADnoteParameters.cpp |  2 +-
 src/Params/ADnoteParameters.h   |  4 ++--
 src/Synth/ADnote.cpp            | 18 +++++++++---------
 src/Synth/ADnote.h              |  8 ++++----
 4 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/src/Params/ADnoteParameters.cpp b/src/Params/ADnoteParameters.cpp
index 293930fe..51f3b282 100644
--- a/src/Params/ADnoteParameters.cpp
+++ b/src/Params/ADnoteParameters.cpp
@@ -153,7 +153,7 @@ static const Ports voicePorts = {
 
 
     //Modulator Stuff
-    rOption(PFMEnabled, rShort("mode"), rOptions(none, morph, ring, phase,
+    rOption(PFMEnabled, rShort("mode"), rOptions(none, mix, ring, phase,
                 frequency, pulse), rDefault(none), "Modulator mode"),
     rParamI(PFMVoice,                   rShort("voice"), rDefault(-1),
         "Modulator Oscillator Selection"),
diff --git a/src/Params/ADnoteParameters.h b/src/Params/ADnoteParameters.h
index e07ef431..d884e23c 100644
--- a/src/Params/ADnoteParameters.h
+++ b/src/Params/ADnoteParameters.h
@@ -20,7 +20,7 @@
 namespace zyn {
 
 enum FMTYPE {
-    NONE, MORPH, RING_MOD, PHASE_MOD, FREQ_MOD, PW_MOD
+    NONE, MIX, RING_MOD, PHASE_MOD, FREQ_MOD, PW_MOD
 };
 
 /*****************************************************************/
@@ -258,7 +258,7 @@ struct ADnoteVoiceParam {
     *   MODULLATOR PARAMETERS   *
     ****************************/
 
-    /* Modullator Parameters (0=off,1=Morph,2=RM,3=PM,4=FM.. */
+    /* Modullator Parameters (0=off,1=Mix,2=RM,3=PM,4=FM.. */
     unsigned char PFMEnabled;
 
     /* Voice that I use as modullator instead of FMSmp.
diff --git a/src/Synth/ADnote.cpp b/src/Synth/ADnote.cpp
index f3b2d6c4..2d015dba 100644
--- a/src/Synth/ADnote.cpp
+++ b/src/Synth/ADnote.cpp
@@ -422,7 +422,7 @@ void ADnote::setupVoiceMod(int nvoice, bool first_run)
     else
         switch(param.PFMEnabled) {
             case 1:
-                voice.FMEnabled = MORPH;
+                voice.FMEnabled = MIX;
                 break;
             case 2:
                 voice.FMEnabled = RING_MOD;
@@ -453,7 +453,7 @@ void ADnote::setupVoiceMod(int nvoice, bool first_run)
 
         float tmp = 1.0f;
         if((pars.VoicePar[vc].FMSmp->Padaptiveharmonics != 0)
-                || (voice.FMEnabled == MORPH)
+                || (voice.FMEnabled == MIX)
                 || (voice.FMEnabled == RING_MOD))
             tmp = getFMvoicebasefreq(nvoice);
 
@@ -730,7 +730,7 @@ void ADnote::legatonote(LegatoParams lpars)
            && (NoteVoicePar[nvoice].FMVoice < 0)) {
             pars.VoicePar[nvoice].FMSmp->newrandseed(prng());
 
-            //Perform Anti-aliasing only on MORPH or RING MODULATION
+            //Perform Anti-aliasing only on MIX or RING MODULATION
 
             int vc = nvoice;
             if(pars.VoicePar[nvoice].PextFMoscil != -1)
@@ -920,7 +920,7 @@ void ADnote::initparameters(WatchManager *wm, const char *prefix)
             param.FMSmp->newrandseed(prng());
             vce.FMSmp = memory.valloc<float>(synth.oscilsize + OSCIL_SMP_EXTRA_SAMPLES);
 
-            //Perform Anti-aliasing only on MORPH or RING MODULATION
+            //Perform Anti-aliasing only on MIX or RING MODULATION
 
             int vc = nvoice;
             if(param.PextFMoscil != -1)
@@ -928,7 +928,7 @@ void ADnote::initparameters(WatchManager *wm, const char *prefix)
 
             float tmp = 1.0f;
             if((pars.VoicePar[vc].FMSmp->Padaptiveharmonics != 0)
-               || (vce.FMEnabled == MORPH)
+               || (vce.FMEnabled == MIX)
                || (vce.FMEnabled == RING_MOD))
                 tmp = getFMvoicebasefreq(nvoice);
 
@@ -1301,9 +1301,9 @@ inline void ADnote::ComputeVoiceOscillator_CubicInterpolation(int nvoice){
 };
 */
 /*
- * Computes the Oscillator (Morphing)
+ * Computes the Oscillator (Mixing)
  */
-inline void ADnote::ComputeVoiceOscillatorMorph(int nvoice)
+inline void ADnote::ComputeVoiceOscillatorMix(int nvoice)
 {
     ComputeVoiceOscillator_LinearInterpolation(nvoice);
     if(FMnewamplitude[nvoice] > 1.0f)
@@ -1617,8 +1617,8 @@ int ADnote::noteout(float *outl, float *outr)
         switch (NoteVoicePar[nvoice].noisetype) {
             case 0: //voice mode=sound
                 switch(NoteVoicePar[nvoice].FMEnabled) {
-                    case MORPH:
-                        ComputeVoiceOscillatorMorph(nvoice);
+                    case MIX:
+                        ComputeVoiceOscillatorMix(nvoice);
                         break;
                     case RING_MOD:
                         ComputeVoiceOscillatorRingModulation(nvoice);
diff --git a/src/Synth/ADnote.h b/src/Synth/ADnote.h
index 8b60e6ca..f41feef7 100644
--- a/src/Synth/ADnote.h
+++ b/src/Synth/ADnote.h
@@ -86,9 +86,9 @@ class ADnote:public SynthNote
          * Affects tmpwave_unison and updates oscposhi/oscposlo
          * @todo remove this declaration if it is commented out*/
         inline void ComputeVoiceOscillator_CubicInterpolation(int nvoice);
-        /**Computes the Oscillator samples with morphing.
+        /**Computes the Oscillator samples with mixing.
          * updates tmpwave_unison*/
-        inline void ComputeVoiceOscillatorMorph(int nvoice);
+        inline void ComputeVoiceOscillatorMix(int nvoice);
         /**Computes the Ring Modulated Oscillator.*/
         inline void ComputeVoiceOscillatorRingModulation(int nvoice);
         /**Computes the Frequency Modulated Oscillator.
@@ -255,8 +255,8 @@ class ADnote:public SynthNote
         /*    INTERNAL VALUES OF THE NOTE AND OF THE VOICES     */
         /********************************************************/
 
-	//pinking filter (Paul Kellet)
-	float pinking[NUM_VOICES][14]; 
+        //pinking filter (Paul Kellet)
+        float pinking[NUM_VOICES][14];
 
         //the size of unison for a single voice
         int unison_size[NUM_VOICES];
-- 
2.47.0

