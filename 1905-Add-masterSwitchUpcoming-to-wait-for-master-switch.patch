From aafe52494bd65f00bf91324550f7fcaf69eb3923 Mon Sep 17 00:00:00 2001
From: Johannes Lorenz <j.git@lorenz-ho.me>
Date: Fri, 24 Mar 2023 17:08:06 +0100
Subject: [PATCH 1905/1936] Add masterSwitchUpcoming to wait for master switch

---
 src/Misc/Master.cpp     | 2 ++
 src/Misc/Master.h       | 3 +++
 src/Misc/MiddleWare.cpp | 3 +++
 3 files changed, 8 insertions(+)

diff --git a/src/Misc/Master.cpp b/src/Misc/Master.cpp
index cbb4ae6b..ce858475 100644
--- a/src/Misc/Master.cpp
+++ b/src/Misc/Master.cpp
@@ -858,6 +858,7 @@ bool Master::applyOscEvent(const char *msg, float *outl, float *outr,
             this_master->mastercb(this_master->mastercb_ptr, new_master);
         }
         bToU->write("/free", "sb", "Master", sizeof(Master*), &this_master);
+        masterSwitchUpcoming = false;
         return false;
     } else if(!strcmp(msg, "/switch-master")) {
         // if the other stuff from load-master is needed optionally
@@ -866,6 +867,7 @@ bool Master::applyOscEvent(const char *msg, float *outl, float *outr,
         Master *new_master  = *(Master**)rtosc_argument(msg, 0).b.data;
         if (hasMasterCb())
             mastercb(mastercb_ptr, new_master);
+        masterSwitchUpcoming = false;
         return false;
     }
 
diff --git a/src/Misc/Master.h b/src/Misc/Master.h
index 791ac3c5..2b557ec7 100644
--- a/src/Misc/Master.h
+++ b/src/Misc/Master.h
@@ -141,6 +141,8 @@ class Master
         //Copy callback to other master
         void copyMasterCbTo(Master* dest);
         bool hasMasterCb() const;
+        void setMasterSwitchUpcoming() { masterSwitchUpcoming = true; }
+        bool isMasterSwitchUpcoming() const { return masterSwitchUpcoming; }
         void setAudioCompressor(bool enabled);
 
         /**parts \todo see if this can be made to be dynamic*/
@@ -247,6 +249,7 @@ class Master
         //Callback When Master changes
         void(*mastercb)(void*,Master*);
         void* mastercb_ptr;
+        std::atomic<bool> masterSwitchUpcoming = { false };
 
         //! apply an OSC event with a DataObj parameter
         //! @note This may be called by MiddleWare if we are offline
diff --git a/src/Misc/MiddleWare.cpp b/src/Misc/MiddleWare.cpp
index 25aeef85..0df188df 100644
--- a/src/Misc/MiddleWare.cpp
+++ b/src/Misc/MiddleWare.cpp
@@ -777,6 +777,7 @@ public:
                 // this requires a temporary master switch
                 Master* old_master = master;
                 dispatcher.updateMaster(&master2);
+                while(old_master->isMasterSwitchUpcoming()) { os_usleep(50000); }
 
                 res = master2.loadOSCFromStr(savefile.c_str(), &dispatcher);
                 // TODO: compare MiddleWare, too?
@@ -795,6 +796,7 @@ public:
                 printf("Saved in less than %d ms.\n", 50*i);
 
                 dispatcher.updateMaster(old_master);
+                while(master2.isMasterSwitchUpcoming()) { os_usleep(50000); }
 #endif
                 if(res < 0)
                 {
@@ -2641,6 +2643,7 @@ void MiddleWare::switchMaster(Master* new_master)
 
     if(impl->master->hasMasterCb())
     {
+        impl->master->setMasterSwitchUpcoming();
         // inform the realtime thread about the switch
         // this will be done by calling the mastercb
         transmitMsg("/switch-master", "b", sizeof(Master*), &new_master);
-- 
2.47.0

