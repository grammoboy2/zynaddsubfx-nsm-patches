From c816179faa83bcb3e3161eef7198476d4826a31b Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Fri, 17 Oct 2014 11:25:38 -0400
Subject: [PATCH 0244/1936] Add mutex around FFTW Planner

This prevents undefined behavior during PADsynth generation
---
 src/DSP/FFTwrapper.cpp | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/src/DSP/FFTwrapper.cpp b/src/DSP/FFTwrapper.cpp
index 65fcebb8..84f74aa3 100644
--- a/src/DSP/FFTwrapper.cpp
+++ b/src/DSP/FFTwrapper.cpp
@@ -23,13 +23,24 @@
 #include <cmath>
 #include <cassert>
 #include <cstring>
+#include <pthread.h>
 #include "FFTwrapper.h"
 
+static pthread_mutex_t *mutex = NULL;
+
 FFTwrapper::FFTwrapper(int fftsize_)
 {
+    //first one will spawn the mutex (yeah this may be a race itself)
+    if(!mutex) {
+        mutex = new pthread_mutex_t;
+        pthread_mutex_init(mutex, NULL);
+    }
+
+
     fftsize  = fftsize_;
     time     = new fftw_real[fftsize];
     fft      = new fftw_complex[fftsize + 1];
+    pthread_mutex_lock(mutex);
     planfftw = fftw_plan_dft_r2c_1d(fftsize,
                                     time,
                                     fft,
@@ -38,12 +49,15 @@ FFTwrapper::FFTwrapper(int fftsize_)
                                         fft,
                                         time,
                                         FFTW_ESTIMATE);
+    pthread_mutex_unlock(mutex);
 }
 
 FFTwrapper::~FFTwrapper()
 {
+    pthread_mutex_lock(mutex);
     fftw_destroy_plan(planfftw);
     fftw_destroy_plan(planfftw_inv);
+    pthread_mutex_unlock(mutex);
 
     delete [] time;
     delete [] fft;
@@ -82,4 +96,6 @@ void FFTwrapper::freqs2smps(const fft_t *freqs, float *smps)
 void FFT_cleanup()
 {
     fftw_cleanup();
+    pthread_mutex_destroy(mutex);
+    delete mutex;
 }
-- 
2.47.0

