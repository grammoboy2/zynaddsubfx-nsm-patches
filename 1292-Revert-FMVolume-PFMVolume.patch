From b79adfd9bb352f89682d843b99058c454c12c978 Mon Sep 17 00:00:00 2001
From: Daniel Sheeler <dsheeler@pobox.com>
Date: Sun, 30 Sep 2018 18:12:09 -0500
Subject: [PATCH 1292/1936] Revert "FMVolume -> PFMVolume"

This reverts commit 4fb09e32a753d5eb961f1174ddb7b6d0b91802da.
---
 src/Params/ADnoteParameters.cpp | 16 ++++++++--------
 src/Params/ADnoteParameters.h   |  2 +-
 src/Synth/ADnote.cpp            |  8 ++++----
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/Params/ADnoteParameters.cpp b/src/Params/ADnoteParameters.cpp
index b13ba9fc..90978638 100644
--- a/src/Params/ADnoteParameters.cpp
+++ b/src/Params/ADnoteParameters.cpp
@@ -157,7 +157,7 @@ static const Ports voicePorts = {
                 frequency, pulse), rDefault(none), "Modulator mode"),
     rParamI(PFMVoice,                   rShort("voice"), rDefault(-1),
         "Modulator Oscillator Selection"),
-    rParamF(PFMvolume,                   rShort("vol."),  rLinear(0.0, 100.0),
+    rParamF(FMvolume,                   rShort("vol."),  rLinear(0.0, 100.0),
         rDefault(70.0),                 "Modulator Magnitude"),
     rParamZyn(PFMVolumeDamp,            rShort("damp."), rDefault(64),
         "Modulator HF dampening"),
@@ -228,10 +228,10 @@ static const Ports voicePorts = {
         {
             rObject *obj = (rObject *)d.obj;
             if (!rtosc_narguments(msg))
-                d.reply(d.loc, "i", (int)roundf(127.0f * obj->PFMvolume
+                d.reply(d.loc, "i", (int)roundf(127.0f * obj->FMvolume
                     / 100.0f));
             else
-                obj->PFMvolume = 100.0f * rtosc_argument(msg, 0).i / 127.0f;
+                obj->FMvolume = 100.0f * rtosc_argument(msg, 0).i / 127.0f;
         }},
     //weird stuff for PCoarseDetune
     {"FMdetunevalue:", rMap(unit,cents) rDoc("Get modulator detune"), NULL, [](const char *, RtData &d)
@@ -535,7 +535,7 @@ void ADnoteVoiceParam::defaults()
     //I use the internal oscillator (-1)
     PFMVoice = -1;
 
-    PFMvolume       = 70.0;
+    FMvolume       = 70.0;
     PFMVolumeDamp   = 64;
     PFMDetune       = 8192;
     PFMCoarseDetune = 0;
@@ -799,7 +799,7 @@ void ADnoteVoiceParam::add2XML(XMLwrapper& xml, bool fmoscilused)
         xml.beginbranch("FM_PARAMETERS");
         xml.addpar("input_voice", PFMVoice);
 
-        xml.addparreal("volume", PFMvolume);
+        xml.addparreal("volume", FMvolume);
         xml.addpar("volume_damp", PFMVolumeDamp);
         xml.addpar("velocity_sensing",
                     PFMVelocityScaleFunction);
@@ -1100,7 +1100,7 @@ void ADnoteVoiceParam::paste(ADnoteVoiceParam &a)
     RCopy(FilterLfo);
 
     copy(PFMVoice);
-    copy(PFMvolume);
+    copy(FMvolume);
     copy(PFMVolumeDamp);
     copy(PFMVelocityScaleFunction);
 
@@ -1280,9 +1280,9 @@ void ADnoteVoiceParam::getfromXML(XMLwrapper& xml, unsigned nvoice)
         PFMVoice      = xml.getpar("input_voice", PFMVoice, -1, nvoice - 1);
         if (upgrade_3_0_3) {
             int Pvolume = xml.getpar127("volume", 0);
-            PFMvolume    = 100.0f * Pvolume / 127.0f;
+            FMvolume    = 100.0f * Pvolume / 127.0f;
         } else {
-            PFMvolume    = xml.getparreal("volume", PFMvolume);
+            FMvolume    = xml.getparreal("volume", FMvolume);
         }
         PFMVolumeDamp = xml.getpar127("volume_damp", PFMVolumeDamp);
         PFMVelocityScaleFunction = xml.getpar127("velocity_sensing",
diff --git a/src/Params/ADnoteParameters.h b/src/Params/ADnoteParameters.h
index 23082643..d884e23c 100644
--- a/src/Params/ADnoteParameters.h
+++ b/src/Params/ADnoteParameters.h
@@ -270,7 +270,7 @@ struct ADnoteVoiceParam {
     OscilGen *FMSmp;
 
     /* Modullator Volume */
-    float PFMvolume;
+    float FMvolume;
 
     /* Modullator damping at higher frequencies */
     unsigned char PFMVolumeDamp;
diff --git a/src/Synth/ADnote.cpp b/src/Synth/ADnote.cpp
index 6d5dccae..cdc6b209 100644
--- a/src/Synth/ADnote.cpp
+++ b/src/Synth/ADnote.cpp
@@ -484,7 +484,7 @@ void ADnote::setupVoiceMod(int nvoice, bool first_run)
     //Compute the Voice's modulator volume (incl. damping)
     float fmvoldamp = powf(440.0f / getvoicebasefreq(nvoice),
             param.PFMVolumeDamp / 64.0f - 1.0f);
-    const float fmvolume_ = param.PFMvolume / 100.0f;
+    const float fmvolume_ = param.FMvolume / 100.0f;
     switch(voice.FMEnabled) {
         case PHASE_MOD:
         case PW_MOD:
@@ -634,19 +634,19 @@ void ADnote::legatonote(LegatoParams lpars)
                              nvoice), pars.VoicePar[nvoice].PFMVolumeDamp
                          / 64.0f);
                 NoteVoicePar[nvoice].FMVolume =
-                    (expf(pars.VoicePar[nvoice].PFMvolume / 100.0f
+                    (expf(pars.VoicePar[nvoice].FMvolume / 100.0f
                           * FM_AMP_MULTIPLIER) - 1.0f) * fmvoldamp * 4.0f;
                 break;
             case FREQ_MOD:
                 NoteVoicePar[nvoice].FMVolume =
-                    (expf(pars.VoicePar[nvoice].PFMvolume / 100.0f
+                    (expf(pars.VoicePar[nvoice].FMvolume / 100.0f
                           * FM_AMP_MULTIPLIER) - 1.0f) * fmvoldamp * 4.0f;
                 break;
             default:
                 if(fmvoldamp > 1.0f)
                     fmvoldamp = 1.0f;
                 NoteVoicePar[nvoice].FMVolume =
-                    pars.VoicePar[nvoice].PFMvolume
+                    pars.VoicePar[nvoice].FMvolume
                     / 100.0f * fmvoldamp;
         }
 
-- 
2.47.0

