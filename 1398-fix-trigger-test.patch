From 35e63af5d17e04ea994c2d981ec1298f16bd84b7 Mon Sep 17 00:00:00 2001
From: michiboo <chanmickyyun@gmail.com>
Date: Mon, 22 Jul 2019 23:57:31 +0300
Subject: [PATCH 1398/1936] fix trigger test

---
 src/Synth/WatchPoint.cpp | 24 ++++++++++++++----------
 src/Tests/AdNoteTest.h   |  3 ---
 src/Tests/TriggerTest.h  | 22 ++++++++++------------
 3 files changed, 24 insertions(+), 25 deletions(-)

diff --git a/src/Synth/WatchPoint.cpp b/src/Synth/WatchPoint.cpp
index 4deced67..24a2806b 100644
--- a/src/Synth/WatchPoint.cpp
+++ b/src/Synth/WatchPoint.cpp
@@ -67,6 +67,9 @@ WatchManager::WatchManager(thrlnk *link)
     memset(sample_list, 0, sizeof(sample_list));
     memset(data_list,   0, sizeof(data_list));
     memset(deactivate,  0, sizeof(deactivate));
+    memset(prebuffer,  0, sizeof(prebuffer));
+    memset(trigger,  0, sizeof(trigger));
+
 }
 
 void WatchManager::add_watch(const char *id)
@@ -207,9 +210,9 @@ void WatchManager::satisfy(const char *id, float *f, int n)
     //FIXME buffer overflow
     if(space){
         for(int i=0; i<space; ++i){
-                if(!trigger[selected])
-                {   if(i == 0)
-                    i ++;
+                if(!trigger[selected]){
+                    if(i == 0)
+                        i++;
                     if (f[i-1] <= 0 && f[i] > 0)
                         trigger[selected] = true;
                      for(int k=0; k<MAX_WATCH; ++k) {
@@ -224,9 +227,9 @@ void WatchManager::satisfy(const char *id, float *f, int n)
                                 else if (strlen(active_list[k]) > strlen(active_list[selected]))
                                     tmp1[strlen(tmp1)-1] =0;
                                 if(!strcmp(tmp1,tmp)){
-                                    //printf("\n path compare %s vs %s   id: %s\n",tmp,tmp1, active_list[k]);
                                     trigger[k] = true;
                                     int space_k = MAX_SAMPLE - sample_list[k];
+
                                     if(space_k >= n)
                                         space_k = n;
 
@@ -234,16 +237,17 @@ void WatchManager::satisfy(const char *id, float *f, int n)
                                         data_list[k][sample_list[k]] = prebuffer[k][j];
                                         sample_list[k]++;
                                     }
+                                }
                             }
                         }
-                     }
                 }
-                if(trigger[selected]){
-                    data_list[selected][sample_list[selected]] = f[i];
-                    sample_list[selected]++;
+
+            if(trigger[selected]){
+            data_list[selected][sample_list[selected]] = f[i];
+            sample_list[selected]++;
             }
         }
+        
     }
 }
-
-}
\ No newline at end of file
+}
diff --git a/src/Tests/AdNoteTest.h b/src/Tests/AdNoteTest.h
index b5e9ea26..4c704a22 100644
--- a/src/Tests/AdNoteTest.h
+++ b/src/Tests/AdNoteTest.h
@@ -1,11 +1,9 @@
 /*
   ZynAddSubFX - a software synthesizer
-
   AdNoteTest.h - CxxTest for Synth/ADnote
   Copyright (C) 2009-2011 Mark McCurry
   Copyright (C) 2009 Harald Hvaal
   Authors: Mark McCurry, Harald Hvaal
-
   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
@@ -150,7 +148,6 @@ class AdNoteTest:public CxxTest::TestSuite
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
             TS_ASSERT_DELTA(outL[255], -0.0901f, 0.0001f);
-            TS_ASSERT(!w->trigger_active("/part0/kit0/adpars/noteout"));
             w->tick();
 
             TS_ASSERT(tr->hasNext());
diff --git a/src/Tests/TriggerTest.h b/src/Tests/TriggerTest.h
index 24aa8dc8..be0a24a6 100644
--- a/src/Tests/TriggerTest.h
+++ b/src/Tests/TriggerTest.h
@@ -125,12 +125,12 @@ class TriggerTest:public CxxTest::TestSuite
             w->add_watch("noteout1");
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
-            w->tick();
+            //w->tick();
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
-            w->tick();
-            TS_ASSERT(w->trigger_active("noteout"));
+            //w->tick();
             TS_ASSERT(w->trigger_active("noteout1"));
+            TS_ASSERT(w->trigger_active("noteout"));
             note->noteout(outL, outR);
             sampleCount += synth->buffersize;
             w->tick();
@@ -156,17 +156,15 @@ class TriggerTest:public CxxTest::TestSuite
 #define OUTPUT_PROFILE
 #ifdef OUTPUT_PROFILE
         void testSpeed() {
+            const int samps = 15000;
 
-          
-            // const int samps = 15000;
-
-            // int t_on = clock(); // timer before calling func
-            // for(int i = 0; i < samps; ++i)
-            //     note->noteout(outL, outR);
-            // int t_off = clock(); // timer when func returns
+            int t_on = clock(); // timer before calling func
+            for(int i = 0; i < samps; ++i)
+                note->noteout(outL, outR);
+            int t_off = clock(); // timer when func returns
 
-            // printf("SubNoteTest: %f seconds for %d Samples to be generated.\n",
-            //        (static_cast<float>(t_off - t_on)) / CLOCKS_PER_SEC, samps);
+            printf("SubNoteTest: %f seconds for %d Samples to be generated.\n",
+                   (static_cast<float>(t_off - t_on)) / CLOCKS_PER_SEC, samps);
         }
 #endif
 };
-- 
2.47.0

