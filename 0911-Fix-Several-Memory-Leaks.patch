From 51591b3286dd2cb492979829c7f376e674763220 Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Fri, 20 May 2016 11:07:56 -0400
Subject: [PATCH 0911/1936] Fix Several Memory Leaks

The primary leak appeared to be missing deallocations for
liblo data structures.
---
 rtosc                               | 2 +-
 src/Containers/MultiPseudoStack.cpp | 5 +++++
 src/Containers/MultiPseudoStack.h   | 1 +
 src/Misc/MiddleWare.cpp             | 6 +++++-
 4 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/rtosc b/rtosc
index 300bf77e..3eca1346 160000
--- a/rtosc
+++ b/rtosc
@@ -1 +1 @@
-Subproject commit 300bf77e3e1eba7b3907038b2553c4abddbf809f
+Subproject commit 3eca134644059d8359978ccdf10cc48fd278a29e
diff --git a/src/Containers/MultiPseudoStack.cpp b/src/Containers/MultiPseudoStack.cpp
index ae5f2b47..0065bb15 100644
--- a/src/Containers/MultiPseudoStack.cpp
+++ b/src/Containers/MultiPseudoStack.cpp
@@ -28,6 +28,11 @@ LockFreeQueue::LockFreeQueue(qli_t *data_, int n)
         tag[i] = INVALID;
 }
 
+LockFreeQueue::~LockFreeQueue(void)
+{
+    delete [] tag;
+}
+
 
 qli_t *LockFreeQueue::read(void) {
 retry:
diff --git a/src/Containers/MultiPseudoStack.h b/src/Containers/MultiPseudoStack.h
index ee495e91..71356788 100644
--- a/src/Containers/MultiPseudoStack.h
+++ b/src/Containers/MultiPseudoStack.h
@@ -34,6 +34,7 @@ class LockFreeQueue
     std::atomic<int32_t>   avail;
     public:
     LockFreeQueue(qli_t *data_, int n);
+    ~LockFreeQueue(void);
     qli_t *read(void);
     void write(qli_t *Q);
 };
diff --git a/src/Misc/MiddleWare.cpp b/src/Misc/MiddleWare.cpp
index 06398f6c..283c2f25 100644
--- a/src/Misc/MiddleWare.cpp
+++ b/src/Misc/MiddleWare.cpp
@@ -120,6 +120,8 @@ void path_search(const char *m, const char *url)
         lo_address addr = lo_address_new_from_url(url);
         if(addr)
             lo_send_message(addr, buffer, msg);
+        lo_address_free(addr);
+        lo_message_free(msg);
     }
 }
 
@@ -137,7 +139,7 @@ static int handler_function(const char *path, const char *types, lo_arg **argv,
             mw->transmitMsg("/echo", "ss", "OSC_URL", tmp);
             mw->activeUrl(tmp);
         }
-
+        free((void*)tmp);
     }
 
     char buffer[2048];
@@ -1375,6 +1377,8 @@ void MiddleWareImpl::sendToRemote(const char *rtmsg, std::string dest)
         lo_address addr = lo_address_new_from_url(dest.c_str());
         if(addr)
             lo_send_message(addr, rtmsg, msg);
+        lo_address_free(addr);
+        lo_message_free(msg);
     }
 }
 
-- 
2.47.0

