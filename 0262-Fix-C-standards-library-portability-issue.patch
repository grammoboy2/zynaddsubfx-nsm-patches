From 417d49b90514b263339fca723882c58e0942cc7a Mon Sep 17 00:00:00 2001
From: Hans Petter Selasky <hps@selasky.org>
Date: Fri, 24 Oct 2014 11:01:48 +0200
Subject: [PATCH 0262/1936] Fix C++ standards library portability issue.

Signed-off-by: Hans Petter Selasky <hps@selasky.org>
---
 src/DSP/FFTwrapper.h             | 19 +++++++++++++++++++
 src/Params/PADnoteParameters.cpp |  2 +-
 src/Synth/OscilGen.cpp           |  6 +++---
 src/UI/Fl_EQGraph.cpp            |  5 +++--
 4 files changed, 26 insertions(+), 6 deletions(-)

diff --git a/src/DSP/FFTwrapper.h b/src/DSP/FFTwrapper.h
index 77941b39..cd42c7fc 100644
--- a/src/DSP/FFTwrapper.h
+++ b/src/DSP/FFTwrapper.h
@@ -48,5 +48,24 @@ class FFTwrapper
         fftw_plan     planfftw, planfftw_inv;
 };
 
+/*
+ * The "std::polar" template has no clear definition for the range of
+ * the input parameters, and some C++ standard library implementations
+ * don't accept negative amplitude among others. Define our own
+ * FFTpolar template, which works like we expect it to.
+ */
+template<class _Tp>
+std::complex<_Tp>
+FFTpolar(const _Tp& __rho, const _Tp& __theta = _Tp(0))
+{
+        _Tp __x = __rho * cos(__theta);
+        if (isnan(__x))
+                __x = 0;
+        _Tp __y = __rho * sin(__theta);
+        if (isnan(__y))
+                __y = 0;
+        return std::complex<_Tp>(__x, __y);
+}
+
 void FFT_cleanup();
 #endif
diff --git a/src/Params/PADnoteParameters.cpp b/src/Params/PADnoteParameters.cpp
index eba10899..11a5f1de 100644
--- a/src/Params/PADnoteParameters.cpp
+++ b/src/Params/PADnoteParameters.cpp
@@ -796,7 +796,7 @@ void PADnoteParameters::sampleGenerator(PADnoteParameters::callback cb,
 
         newsample.smp[0] = 0.0f;
         for(int i = 1; i < spectrumsize; ++i) //randomize the phases
-            fftfreqs[i] = std::polar(spectrum[i], (float)RND * 2 * PI);
+            fftfreqs[i] = FFTpolar(spectrum[i], (float)RND * 2 * PI);
         //that's all; here is the only ifft for the whole sample;
         //no windows are used ;-)
         fft->freqs2smps(fftfreqs, newsample.smp);
diff --git a/src/Synth/OscilGen.cpp b/src/Synth/OscilGen.cpp
index fcb1ee8d..26d8b470 100644
--- a/src/Synth/OscilGen.cpp
+++ b/src/Synth/OscilGen.cpp
@@ -665,7 +665,7 @@ void OscilGen::spectrumadjust(fft_t *freqs)
                     mag = 1.0f;
                 break;
         }
-        freqs[i] = std::polar<fftw_real>(mag, phase);
+        freqs[i] = FFTpolar<fftw_real>(mag, phase);
     }
 }
 
@@ -766,7 +766,7 @@ void OscilGen::prepare(fft_t *freqs)
                 int k = i * (j + 1);
                 if(k >= synth->oscilsize / 2)
                     break;
-                freqs[k] += basefuncFFTfreqs[i] * std::polar<fftw_real>(
+                freqs[k] += basefuncFFTfreqs[i] * FFTpolar<fftw_real>(
                     hmag[j],
                     hphase[j] * k);
             }
@@ -981,7 +981,7 @@ short int OscilGen::get(float *smps, float freqHz, int resonance)
         const float rnd = PI * powf((Prand - 64.0f) / 64.0f, 2.0f);
         for(int i = 1; i < nyquist - 1; ++i) //to Nyquist only for AntiAliasing
             outoscilFFTfreqs[i] *=
-                std::polar<fftw_real>(1.0f, (float)(rnd * i * RND));
+                FFTpolar<fftw_real>(1.0f, (float)(rnd * i * RND));
     }
 
     //Harmonic Amplitude Randomness
diff --git a/src/UI/Fl_EQGraph.cpp b/src/UI/Fl_EQGraph.cpp
index b9b68768..877e4732 100644
--- a/src/UI/Fl_EQGraph.cpp
+++ b/src/UI/Fl_EQGraph.cpp
@@ -3,6 +3,7 @@
 #include "Fl_EQGraph.H"
 #include "common.H"
 #include "../Effects/EffectMgr.h"
+#include "../DSP/FFTwrapper.h"
 #include "../globals.h"
 
 #include <rtosc/rtosc.h>
@@ -139,8 +140,8 @@ double Fl_EQGraph::getresponse(int maxy,float freq) const
          
 
     for(int i = 0; i < MAX_EQ_BANDS*MAX_FILTER_STAGES*2+1; ++i) {
-        num_res += std::polar<float>(num[i], i*angle);
-        dem_res += std::polar<float>(dem[i], i*angle);
+        num_res += FFTpolar<float>(num[i], i*angle);
+        dem_res += FFTpolar<float>(dem[i], i*angle);
     }
 
     float dbresp=20*log(abs(num_res/dem_res))/log(10);
-- 
2.47.0

