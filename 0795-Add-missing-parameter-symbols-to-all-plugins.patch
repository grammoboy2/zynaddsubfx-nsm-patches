From 7892f484535b17f0b633e9863bc9918f202a2e4c Mon Sep 17 00:00:00 2001
From: falkTX <falktx@gmail.com>
Date: Mon, 14 Dec 2015 23:02:16 +0100
Subject: [PATCH 0795/1936] Add missing parameter symbols to all plugins

---
 src/Plugin/AlienWah/AlienWah.cpp           | 28 ++++++++++------
 src/Plugin/Chorus/Chorus.cpp               | 31 +++++++++++-------
 src/Plugin/Distortion/Distortion.cpp       | 28 ++++++++++------
 src/Plugin/DynamicFilter/DynamicFilter.cpp | 25 +++++++++-----
 src/Plugin/Echo/Echo.cpp                   | 16 +++++----
 src/Plugin/Phaser/Phaser.cpp               | 38 ++++++++++++++--------
 src/Plugin/Reverb/Reverb.cpp               | 36 ++++++++++++--------
 7 files changed, 129 insertions(+), 73 deletions(-)

diff --git a/src/Plugin/AlienWah/AlienWah.cpp b/src/Plugin/AlienWah/AlienWah.cpp
index 11882984..bd0f4c6f 100644
--- a/src/Plugin/AlienWah/AlienWah.cpp
+++ b/src/Plugin/AlienWah/AlienWah.cpp
@@ -76,7 +76,6 @@ protected:
     void initParameter(uint32_t index, Parameter& parameter) noexcept override
     {
         parameter.hints = kParameterIsInteger;
-        parameter.name  = "";
         parameter.unit  = "";
         parameter.ranges.min = 0.0f;
         parameter.ranges.max = 127.0f;
@@ -85,17 +84,20 @@ protected:
         {
         case 0:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "LFO Frequency";
+            parameter.name   = "LFO Frequency";
+            parameter.symbol = "lfofreq";
             parameter.ranges.def = 70.0f;
             break;
         case 1:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "LFO Randomness";
+            parameter.name   = "LFO Randomness";
+            parameter.symbol = "lforand";
             parameter.ranges.def = 0.0f;
             break;
         case 2:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "LFO Type";
+            parameter.name   = "LFO Type";
+            parameter.symbol = "lfotype";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             /*
@@ -108,33 +110,39 @@ protected:
             break;
         case 3:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "LFO Stereo";
+            parameter.name   = "LFO Stereo";
+            parameter.symbol = "lfostereo";
             parameter.ranges.def = 62.0f;
             break;
         case 4:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "Depth";
+            parameter.name   = "Depth";
+            parameter.symbol = "depth";
             parameter.ranges.def = 60.0f;
             break;
         case 5:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "Feedback";
+            parameter.name   = "Feedback";
+            parameter.symbol = "fb";
             parameter.ranges.def = 105.0f;
             break;
         case 6:
-            parameter.name = "Delay";
+            parameter.name   = "Delay";
+            parameter.symbol = "delay";
             parameter.ranges.def = 25.0f;
             parameter.ranges.min = 1.0f;
             parameter.ranges.max = 100.0f;
             break;
         case 7:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "L/R Cross";
+            parameter.name   = "L/R Cross";
+            parameter.symbol = "lrcross";
             parameter.ranges.def = 0.0f;
             break;
         case 8:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "Phase";
+            parameter.name   = "Phase";
+            parameter.symbol = "phase";
             parameter.ranges.def = 64.0f;
             break;
         }
diff --git a/src/Plugin/Chorus/Chorus.cpp b/src/Plugin/Chorus/Chorus.cpp
index 63554f5a..b42ccba9 100644
--- a/src/Plugin/Chorus/Chorus.cpp
+++ b/src/Plugin/Chorus/Chorus.cpp
@@ -76,7 +76,6 @@ protected:
     void initParameter(uint32_t index, Parameter& parameter) noexcept override
     {
         parameter.hints = kParameterIsInteger|kParameterIsAutomable;
-        parameter.name  = "";
         parameter.unit  = "";
         parameter.ranges.min = 0.0f;
         parameter.ranges.max = 127.0f;
@@ -84,15 +83,18 @@ protected:
         switch (index)
         {
         case 0:
-            parameter.name = "LFO Frequency";
+            parameter.name   = "LFO Frequency";
+            parameter.symbol = "lfofreq";
             parameter.ranges.def = 50.0f;
             break;
         case 1:
-            parameter.name = "LFO Randomness";
+            parameter.name   = "LFO Randomness";
+            parameter.symbol = "lforand";
             parameter.ranges.def = 0.0f;
             break;
         case 2:
-            parameter.name = "LFO Type";
+            parameter.name   = "LFO Type";
+            parameter.symbol = "lfotype";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             /*
@@ -104,34 +106,41 @@ protected:
             */
             break;
         case 3:
-            parameter.name = "LFO Stereo";
+            parameter.name   = "LFO Stereo";
+            parameter.symbol = "lfostereo";
             parameter.ranges.def = 90.0f;
             break;
         case 4:
-            parameter.name = "Depth";
+            parameter.name   = "Depth";
+            parameter.symbol = "depth";
             parameter.ranges.def = 40.0f;
             break;
         case 5:
-            parameter.name = "Delay";
+            parameter.name   = "Delay";
+            parameter.symbol = "delay";
             parameter.ranges.def = 85.0f;
             break;
         case 6:
-            parameter.name = "Feedback";
+            parameter.name   = "Feedback";
+            parameter.symbol = "fb";
             parameter.ranges.def = 64.0f;
             break;
         case 7:
-            parameter.name = "L/R Cross";
+            parameter.name   = "L/R Cross";
+            parameter.symbol = "lrcross";
             parameter.ranges.def = 119.0f;
             break;
         case 8:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Flange Mode";
+            parameter.name   = "Flange Mode";
+            parameter.symbol = "flang";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
         case 9:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Subtract Output";
+            parameter.name   = "Subtract Output";
+            parameter.symbol = "subsout";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
diff --git a/src/Plugin/Distortion/Distortion.cpp b/src/Plugin/Distortion/Distortion.cpp
index ab58c431..eee2d263 100644
--- a/src/Plugin/Distortion/Distortion.cpp
+++ b/src/Plugin/Distortion/Distortion.cpp
@@ -76,7 +76,6 @@ protected:
     void initParameter(uint32_t index, Parameter& parameter) noexcept override
     {
         parameter.hints = kParameterIsInteger|kParameterIsAutomable;
-        parameter.name  = "";
         parameter.unit  = "";
         parameter.ranges.min = 0.0f;
         parameter.ranges.max = 127.0f;
@@ -84,19 +83,23 @@ protected:
         switch (index)
         {
         case 0:
-            parameter.name = "L/R Cross";
+            parameter.name   = "L/R Cross";
+            parameter.symbol = "lrcross";
             parameter.ranges.def = 35.0f;
             break;
         case 1:
-            parameter.name = "Drive";
+            parameter.name   = "Drive";
+            parameter.symbol = "drive";
             parameter.ranges.def = 56.0f;
             break;
         case 2:
-            parameter.name = "Level";
+            parameter.name   = "Level";
+            parameter.symbol = "level";
             parameter.ranges.def = 70.0f;
             break;
         case 3:
-            parameter.name = "Type";
+            parameter.name   = "Type";
+            parameter.symbol = "type";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 13.0f;
             /*
@@ -133,27 +136,32 @@ protected:
             break;
         case 4:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Negate";
+            parameter.name   = "Negate";
+            parameter.symbol = "negate";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
         case 5:
-            parameter.name = "Low-Pass Filter";
+            parameter.name   = "Low-Pass Filter";
+            parameter.symbol = "lpf";
             parameter.ranges.def = 96.0f;
             break;
         case 6:
-            parameter.name = "High-Pass Filter";
+            parameter.name   = "High-Pass Filter";
+            parameter.symbol = "hpf";
             parameter.ranges.def = 0.0f;
             break;
         case 7:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Stereo";
+            parameter.name   = "Stereo";
+            parameter.symbol = "stereo";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
         case 8:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Pre-Filtering";
+            parameter.name   = "Pre-Filtering";
+            parameter.symbol = "pf";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
diff --git a/src/Plugin/DynamicFilter/DynamicFilter.cpp b/src/Plugin/DynamicFilter/DynamicFilter.cpp
index 37b63f06..375224da 100644
--- a/src/Plugin/DynamicFilter/DynamicFilter.cpp
+++ b/src/Plugin/DynamicFilter/DynamicFilter.cpp
@@ -76,7 +76,6 @@ protected:
     void initParameter(uint32_t index, Parameter& parameter) noexcept override
     {
         parameter.hints = kParameterIsInteger|kParameterIsAutomable;
-        parameter.name  = "";
         parameter.unit  = "";
         parameter.ranges.min = 0.0f;
         parameter.ranges.max = 127.0f;
@@ -84,15 +83,18 @@ protected:
         switch (index)
         {
         case 0:
-            parameter.name = "LFO Frequency";
+            parameter.name   = "LFO Frequency";
+            parameter.symbol = "lfofreq";
             parameter.ranges.def = 80.0f;
             break;
         case 1:
-            parameter.name = "LFO Randomness";
+            parameter.name   = "LFO Randomness";
+            parameter.symbol = "lforand";
             parameter.ranges.def = 0.0f;
             break;
         case 2:
-            parameter.name = "LFO Type";
+            parameter.name   = "LFO Type";
+            parameter.symbol = "lfotype";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             /*
@@ -104,25 +106,30 @@ protected:
             */
             break;
         case 3:
-            parameter.name = "LFO Stereo";
+            parameter.name   = "LFO Stereo";
+            parameter.symbol = "lfostereo";
             parameter.ranges.def = 64.0f;
             break;
         case 4:
-            parameter.name = "LFO Depth";
+            parameter.name   = "LFO Depth";
+            parameter.symbol = "lfodepth";
             parameter.ranges.def = 0.0f;
             break;
         case 5:
-            parameter.name = "Amp sns";
+            parameter.name   = "Amp sns";
+            parameter.symbol = "ampsns";
             parameter.ranges.def = 90.0f;
             break;
         case 6:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Amp sns inv";
+            parameter.name   = "Amp sns inv";
+            parameter.symbol = "ampsnsinv";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
         case 7:
-            parameter.name = "Amp Smooth";
+            parameter.name   = "Amp Smooth";
+            parameter.symbol = "ampsmooth";
             parameter.ranges.def = 60.0f;
             break;
         }
diff --git a/src/Plugin/Echo/Echo.cpp b/src/Plugin/Echo/Echo.cpp
index a87f43cc..e685f369 100644
--- a/src/Plugin/Echo/Echo.cpp
+++ b/src/Plugin/Echo/Echo.cpp
@@ -76,7 +76,6 @@ protected:
     void initParameter(uint32_t index, Parameter& parameter) noexcept override
     {
         parameter.hints = kParameterIsInteger|kParameterIsAutomable;
-        parameter.name  = "";
         parameter.unit  = "";
         parameter.ranges.min = 0.0f;
         parameter.ranges.max = 127.0f;
@@ -84,23 +83,28 @@ protected:
         switch (index)
         {
         case 0:
-            parameter.name = "Delay";
+            parameter.name   = "Delay";
+            parameter.symbol = "delay";
             parameter.ranges.def = 35.0f;
             break;
         case 1:
-            parameter.name = "L/R Delay";
+            parameter.name   = "L/R Delay";
+            parameter.symbol = "lrdelay";
             parameter.ranges.def = 64.0f;
             break;
         case 2:
-            parameter.name = "L/R Cross";
+            parameter.name   = "L/R Cross";
+            parameter.symbol = "lrcross";
             parameter.ranges.def = 30.0f;
             break;
         case 3:
-            parameter.name = "Feedback";
+            parameter.name   = "Feedback";
+            parameter.symbol = "fb";
             parameter.ranges.def = 59.0f;
             break;
         case 4:
-            parameter.name = "High Damp";
+            parameter.name   = "High Damp";
+            parameter.symbol = "damp";
             parameter.ranges.def = 0.0f;
             break;
         }
diff --git a/src/Plugin/Phaser/Phaser.cpp b/src/Plugin/Phaser/Phaser.cpp
index 396686fc..dfd7e234 100644
--- a/src/Plugin/Phaser/Phaser.cpp
+++ b/src/Plugin/Phaser/Phaser.cpp
@@ -76,7 +76,6 @@ protected:
     void initParameter(uint32_t index, Parameter& parameter) noexcept override
     {
         parameter.hints = kParameterIsInteger|kParameterIsAutomable;
-        parameter.name  = "";
         parameter.unit  = "";
         parameter.ranges.min = 0.0f;
         parameter.ranges.max = 127.0f;
@@ -84,15 +83,18 @@ protected:
         switch (index)
         {
         case 0:
-            parameter.name = "LFO Frequency";
+            parameter.name   = "LFO Frequency";
+            parameter.symbol = "lfofreq";
             parameter.ranges.def = 36.0f;
             break;
         case 1:
-            parameter.name = "LFO Randomness";
+            parameter.name   = "LFO Randomness";
+            parameter.symbol = "lforand";
             parameter.ranges.def = 0.0f;
             break;
         case 2:
-            parameter.name = "LFO Type";
+            parameter.name   = "LFO Type";
+            parameter.symbol = "lfotype";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             /*
@@ -104,50 +106,60 @@ protected:
             */
             break;
         case 3:
-            parameter.name = "LFO Stereo";
+            parameter.name   = "LFO Stereo";
+            parameter.symbol = "lfostereo";
             parameter.ranges.def = 64.0f;
             break;
         case 4:
-            parameter.name = "Depth";
+            parameter.name   = "Depth";
+            parameter.symbol = "depth";
             parameter.ranges.def = 110.0f;
             break;
         case 5:
             parameter.name = "Feedback";
+            parameter.symbol = "fb";
             parameter.ranges.def = 64.0f;
             break;
         case 6:
-            parameter.name = "Stages";
+            parameter.name   = "Stages";
+            parameter.symbol = "stages";
             parameter.ranges.def = 1.0f;
             parameter.ranges.min = 1.0f;
             parameter.ranges.max = 12.0f;
             break;
         case 7:
-            parameter.name = "L/R Cross|Offset";
+            parameter.name   = "L/R Cross|Offset";
+            parameter.symbol = "lrcross";
             parameter.ranges.def = 0.0f;
             break;
         case 8:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Subtract Output";
+            parameter.name   = "Subtract Output";
+            parameter.symbol = "subsout";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
         case 9:
-            parameter.name = "Phase|Width";
+            parameter.name   = "Phase|Width";
+            parameter.symbol = "phase";
             parameter.ranges.def = 20.0f;
             break;
         case 10:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Hyper";
+            parameter.name   = "Hyper";
+            parameter.symbol = "hyper";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
         case 11:
-            parameter.name = "Distortion";
+            parameter.name   = "Distortion";
+            parameter.symbol = "dist";
             parameter.ranges.def = 0.0f;
             break;
         case 12:
             parameter.hints |= kParameterIsBoolean;
-            parameter.name = "Analog";
+            parameter.name   = "Analog";
+            parameter.symbol = "analog";
             parameter.ranges.def = 0.0f;
             parameter.ranges.max = 1.0f;
             break;
diff --git a/src/Plugin/Reverb/Reverb.cpp b/src/Plugin/Reverb/Reverb.cpp
index 6f76bd7f..b7e7fe8d 100644
--- a/src/Plugin/Reverb/Reverb.cpp
+++ b/src/Plugin/Reverb/Reverb.cpp
@@ -76,7 +76,6 @@ protected:
     void initParameter(uint32_t index, Parameter& parameter) noexcept override
     {
         parameter.hints = kParameterIsInteger;
-        parameter.name  = "";
         parameter.unit  = "";
         parameter.ranges.min = 0.0f;
         parameter.ranges.max = 127.0f;
@@ -85,46 +84,53 @@ protected:
         {
         case 0:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "Time";
+            parameter.name   = "Time";
+            parameter.symbol = "time";
             parameter.ranges.def = 63.0f;
             break;
         case 1:
-            parameter.name = "Delay";
+            parameter.name   = "Delay";
+            parameter.symbol = "delay";
             parameter.ranges.def = 24.0f;
             break;
         case 2:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "Feedback";
+            parameter.name   = "Feedback";
+            parameter.symbol = "fb";
             parameter.ranges.def = 0.0f;
             break;
         case 3:
             // FIXME: unused
-            parameter.name = "bw";
+            parameter.name   = "bw (unused)";
+            parameter.symbol = "unused_bw";
             parameter.ranges.def = 0.0f;
-            parameter.ranges.max = 1.0f;
             break;
         case 4:
             // FIXME: unused
-            parameter.name = "E/R";
+            parameter.name   = "E/R (unused)";
+            parameter.symbol = "unused_er";
             parameter.ranges.def = 0.0f;
-            parameter.ranges.max = 1.0f;
             break;
         case 5:
-            parameter.name = "Low-Pass Filter";
+            parameter.name   = "Low-Pass Filter";
+            parameter.symbol = "lpf";
             parameter.ranges.def = 85.0f;
             break;
         case 6:
-            parameter.name = "High-Pass Filter";
+            parameter.name   = "High-Pass Filter";
+            parameter.symbol = "hpf";
             parameter.ranges.def = 5.0f;
             break;
         case 7:
             parameter.hints |= kParameterIsAutomable;
-            parameter.name = "Damp";
+            parameter.name   = "Damp";
+            parameter.symbol = "damp";
             parameter.ranges.def = 83.0f;
             parameter.ranges.min = 64.0f;
             break;
         case 8:
-            parameter.name = "Type";
+            parameter.name   = "Type";
+            parameter.symbol = "type";
             parameter.ranges.def = 1.0f;
             parameter.ranges.max = 2.0f;
             /*
@@ -138,12 +144,14 @@ protected:
             */
             break;
         case 9:
-            parameter.name = "Room size";
+            parameter.name   = "Room size";
+            parameter.symbol = "size";
             parameter.ranges.def = 64.0f;
             parameter.ranges.min = 1.0f;
             break;
         case 10:
-            parameter.name = "Bandwidth";
+            parameter.name   = "Bandwidth";
+            parameter.symbol = "bw";
             parameter.ranges.def = 20.0f;
             break;
         }
-- 
2.47.0

