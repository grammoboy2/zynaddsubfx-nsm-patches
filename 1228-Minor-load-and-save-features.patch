From 797c9a9069c30e682128033c923bac3739e67df1 Mon Sep 17 00:00:00 2001
From: Johannes Lorenz <johannes89@ist-einmalig.de>
Date: Sat, 2 Dec 2017 10:06:05 +0100
Subject: [PATCH 1228/1936] Minor load and save features

Details:
* implement error handling for file loading
* don't save vowels if they are currently not in use
---
 TODO-default-values.txt     |  3 +++
 rtosc                       |  2 +-
 src/Misc/Master.cpp         |  6 +++++-
 src/Misc/MiddleWare.cpp     | 19 ++++++++++++-------
 src/Params/FilterParams.cpp |  9 ++++++---
 src/Params/FilterParams.h   |  9 ++++++---
 src/Tests/SaveOSC.cpp       |  4 +++-
 7 files changed, 36 insertions(+), 16 deletions(-)

diff --git a/TODO-default-values.txt b/TODO-default-values.txt
index 0e0bed1a..a113cd9d 100644
--- a/TODO-default-values.txt
+++ b/TODO-default-values.txt
@@ -3,6 +3,9 @@ TODOs for default values:
 * code for random port ("init() to random")
 * remove rDefaultMissing if possible
 * auto range-print
+* rEnabled vs rExist:
+  * clarify/rename
+  * make a clean function?
 move code:
 ports.cpp => default_values.cpp
 rtosc.cpp => ...cmp.cpp?
diff --git a/rtosc b/rtosc
index d9731558..a5580bec 160000
--- a/rtosc
+++ b/rtosc
@@ -1 +1 @@
-Subproject commit d9731558ff4ae3ac14893aa90866061df6e5baee
+Subproject commit a5580bec0efddd685c5f5f1c3a1d0429330c8b39
diff --git a/src/Misc/Master.cpp b/src/Misc/Master.cpp
index 6041a2a8..5818e067 100644
--- a/src/Misc/Master.cpp
+++ b/src/Misc/Master.cpp
@@ -1718,8 +1718,12 @@ int Master::saveOSC(const char *filename, master_dispatcher_t* dispatcher,
                 std::ofstream ofs(filename);
                 ofs << savefile;
             }
-            else
+            else {
+                std::cout << "The savefile content follows" << std::endl;
+                std::cout << "---->8----" << std::endl;
                 std::cout << savefile << std::endl;
+                std::cout << "---->8----" << std::endl;
+            }
         }
         else
         {
diff --git a/src/Misc/MiddleWare.cpp b/src/Misc/MiddleWare.cpp
index 5acc0281..ca3d194f 100644
--- a/src/Misc/MiddleWare.cpp
+++ b/src/Misc/MiddleWare.cpp
@@ -560,26 +560,27 @@ public:
     }
 
     //Well, you don't get much crazier than changing out all of your RT
-    //structures at once... TODO error handling
-    void loadMaster(const char *filename, bool osc_format = false)
+    //structures at once...
+    int loadMaster(const char *filename, bool osc_format = false)
     {
         Master *m = new Master(synth, config);
         m->uToB = uToB;
         m->bToU = bToU;
+
         if(filename) {
             if(osc_format)
             {
                 mw_dispatcher_t dispatcher(parent);
                 if( m->loadOSC(filename, &dispatcher) < 0 ) {
                     delete m;
-                    return;
+                    return -1;
                 }
             }
             else
             {
                 if ( m->loadXML(filename) ) {
                     delete m;
-                    return;
+                    return -1;
                 }
             }
             m->applyparameters();
@@ -593,6 +594,7 @@ public:
         //Give it to the backend and wait for the old part to return for
         //deallocation
         parent->transmitMsg("/load-master", "b", sizeof(Master*), &m);
+        return 0;
     }
 
     int saveMaster(const char *filename, bool osc_format = false)
@@ -1198,9 +1200,12 @@ void load_cb(const char *msg, RtData &d)
     if(rtosc_narguments(msg) > 1)
         request_time = rtosc_argument(msg, 1).t;
 
-    impl.loadMaster(file, osc_format);
-    d.broadcast("/damage", "s", "/");
-    d.broadcast(d.loc, "stT", file, request_time);
+    if(!impl.loadMaster(file, osc_format)) { // return-value 0 <=> OK
+        d.broadcast("/damage", "s", "/");
+        d.broadcast(d.loc, "stT", file, request_time);
+    }
+    else
+        d.broadcast(d.loc, "stF", file, request_time);
 }
 
 template<bool osc_format>
diff --git a/src/Params/FilterParams.cpp b/src/Params/FilterParams.cpp
index 7189a7ec..6e5cfba2 100644
--- a/src/Params/FilterParams.cpp
+++ b/src/Params/FilterParams.cpp
@@ -139,7 +139,10 @@ const rtosc::Ports FilterParams::ports = {
             d.reply(d.loc, "b", sizeof_pvowels, obj->Pvowels);
         }},
 
-    {"Pvowels#" STRINGIFY(FF_MAX_VOWELS) "/", NULL, &subports,
+    rEnabledCondition(is_formant_filter, obj->Pcategory == 1),
+    {"Pvowels#" STRINGIFY(FF_MAX_VOWELS) "/",
+        rEnabledByCondition(is_formant_filter),
+        &subports,
         [](const char *msg, RtData &d) {
             const char *mm = msg; \
             while(*mm && !isdigit(*mm)) ++mm; \
@@ -414,8 +417,8 @@ void FilterParams::defaults(int n)
 /*
  * Get the parameters from other FilterParams
  */
-
-void FilterParams::getfromFilterParams(FilterParams *pars)
+// WARNING! Function unused since 2004, see declaration in header
+void FilterParams::getfromFilterParams(const FilterParams *pars)
 {
     defaults();
 
diff --git a/src/Params/FilterParams.h b/src/Params/FilterParams.h
index 021d8a59..06cf4d54 100644
--- a/src/Params/FilterParams.h
+++ b/src/Params/FilterParams.h
@@ -41,8 +41,11 @@ class FilterParams:public PresetsArray
         void paste(FilterParams &);
         void pasteArray(FilterParams &, int section);
 
-
-        void getfromFilterParams(FilterParams *pars);
+        //! assignment operator-like function
+        //! @warning function has been unused since 2004
+        //!     (84ddf9c0132b6be8d685f01c6444edd8bc49bb0f). If you use it, make
+        //!     sure it's still up-to-date and make tests
+        void getfromFilterParams(const FilterParams *pars);
 
         float getfreq() const ;
         float getq() const ;
@@ -90,7 +93,7 @@ class FilterParams:public PresetsArray
         float getformantamp(unsigned char amp) const ;
         float getformantq(unsigned char q) const ;
 
-        void defaults(int n);
+        void defaults(int n); //!< set default for formant @p n
 
         int loc; //!< consumer location
         bool changed;
diff --git a/src/Tests/SaveOSC.cpp b/src/Tests/SaveOSC.cpp
index e2fa3ded..e5a33aa0 100644
--- a/src/Tests/SaveOSC.cpp
+++ b/src/Tests/SaveOSC.cpp
@@ -102,7 +102,7 @@ class SaveOSCTest
                     osc_path, elapsed_secs,
                     attempt+1,
                     attempt == tries ? "timeout"
-                                     : ok ? "ok" : "failure");
+                                     : ok ? "success" : "failure");
 
             return ok && (attempt != tries);
         }
@@ -205,5 +205,7 @@ int main(int argc, char** argv)
     test.start_realtime();
     int res = test.run(argc, argv);
     test.stop_realtime();
+    std::cerr << "Summary: " << ((res == EXIT_SUCCESS) ? "SUCCESS" : "FAILURE")
+              << std::endl;
     return res;
 }
-- 
2.47.0

