From 2f092173e9576326afb7080d0c2a28426a9cf610 Mon Sep 17 00:00:00 2001
From: Michael Muller <mmuller@enduden.com>
Date: Sat, 9 Nov 2019 14:17:39 -0500
Subject: [PATCH 1452/1936] Add unit test and improve the fix.

---
 src/Misc/MiddleWare.cpp    | 12 ++++++------
 src/Tests/MiddlewareTest.h | 14 ++++++++++++++
 2 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/src/Misc/MiddleWare.cpp b/src/Misc/MiddleWare.cpp
index cf7b886d..61b62d69 100644
--- a/src/Misc/MiddleWare.cpp
+++ b/src/Misc/MiddleWare.cpp
@@ -471,12 +471,7 @@ public:
         if(actual_load[npart] != pending_load[npart])
             return;
         assert(actual_load[npart] <= pending_load[npart]);
-
-        if(!filename || !*filename){
-            fprintf(stderr, "Warning: failed to load undefined part<%s>\n",
-                    filename);
-            return;
-        }
+        assert(filename);
 
         //load part in async fashion when possible
 #ifndef WIN32
@@ -1582,6 +1577,11 @@ static rtosc::Ports middlewareReplyPorts = {
         Bank &bank        = impl.master->bank;
         const int part    = rtosc_argument(msg, 0).i;
         const int program = rtosc_argument(msg, 1).i + 128*bank.bank_lsb;
+        if (program >= BANK_SIZE) {
+            fprintf(stderr, "bank:program number %d:%d is out of range.",
+                    program >> 7, program & 0x7f);
+            return;
+        }
         const char *fn  = impl.master->bank.ins[program].filename.c_str();
         impl.loadPart(part, fn, impl.master, d);
         impl.uToB->write(("/part"+to_s(part)+"/Pname").c_str(), "s",
diff --git a/src/Tests/MiddlewareTest.h b/src/Tests/MiddlewareTest.h
index 876d0b4e..8f24abae 100644
--- a/src/Tests/MiddlewareTest.h
+++ b/src/Tests/MiddlewareTest.h
@@ -123,6 +123,20 @@ class PluginTest:public CxxTest::TestSuite
             //const string fdata = loadfile(fname);
         }
 
+        void testChangeToOutOfRangeProgram()
+        {
+            middleware[0]->transmitMsg("/bank/msb", "i", 0);
+            middleware[0]->tick();
+            middleware[0]->transmitMsg("/bank/lsb", "i", 1);
+            middleware[0]->tick();
+            middleware[0]->pendingSetProgram(0, 32);
+            middleware[0]->tick();
+            master[0]->GetAudioOutSamples(synth->buffersize, synth->samplerate, outL, outR);
+            // We should ideally be checking to verify that the part change
+            // didn't happen, but it's not clear how to do that.  We're
+            // currently relying on the assert(filename) in loadPart() failing
+            // if this logic gets broken.
+        }
 
     private:
         SYNTH_T *synth;
-- 
2.47.0

