From 16b2ca1c9d75b2aff607edb6ae520cf157479ef5 Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Wed, 17 Aug 2016 15:36:21 -0400
Subject: [PATCH 1003/1936] Add More OSC Metadata

---
 src/Misc/Part.cpp                | 8 ++++----
 src/Params/Controller.cpp        | 4 ++--
 src/Params/PADnoteParameters.cpp | 2 +-
 src/Params/SUBnoteParameters.cpp | 2 +-
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/Misc/Part.cpp b/src/Misc/Part.cpp
index fd7c2d51..82c6d7bb 100644
--- a/src/Misc/Part.cpp
+++ b/src/Misc/Part.cpp
@@ -51,10 +51,10 @@ static const Ports partPorts = {
     rParamZyn(Pvolume, rShort("Vol"), "Part Volume"),
 #undef rChangeCb
 #define rChangeCb obj->setPpanning(obj->Ppanning);
-    rParamZyn(Ppanning, "Set Panning"),
+    rParamZyn(Ppanning, rShort("pan"), "Set Panning"),
 #undef rChangeCb
 #define rChangeCb obj->setkeylimit(obj->Pkeylimit);
-    rParamI(Pkeylimit, rProp(parameter), rMap(min,0), rMap(max, POLYPHONY), "Key limit per part"),
+    rParamI(Pkeylimit, rShort("limit"), rProp(parameter), rMap(min,0), rMap(max, POLYPHONY), "Key limit per part"),
 #undef rChangeCb
 #define rChangeCb
     rParamZyn(Pminkey, rShort("min"), "Min Used Key"),
@@ -62,8 +62,8 @@ static const Ports partPorts = {
     rParamZyn(Pkeyshift, rShort("shift"), "Part keyshift"),
     rParamZyn(Prcvchn, rOptions(ch1, ch2, ch3, ch4, ch5, ch6, ch7, ch8, ch9, ch10, ch11, ch12, ch13, ch14, ch15, ch16),
                 "Active MIDI channel"),
-    rParamZyn(Pvelsns,   "Velocity sensing"),
-    rParamZyn(Pveloffs,  "Velocity offset"),
+    rParamZyn(Pvelsns,   rShort("sense"), "Velocity sensing"),
+    rParamZyn(Pveloffs,  rShort("offset"), "Velocity offset"),
     rToggle(Pnoteon,  "If the channel accepts note on events"),
     rOption(Pkitmode, rOptions(Off, Multi-Kit, Single-Kit), "Kit mode/enable\n"
             "Off        - Only the first kit is ever utilized\n"
diff --git a/src/Params/Controller.cpp b/src/Params/Controller.cpp
index 985ce266..c424ce1d 100644
--- a/src/Params/Controller.cpp
+++ b/src/Params/Controller.cpp
@@ -35,7 +35,7 @@ const rtosc::Ports Controller::ports = {
     rParamZyn(modwheel.depth,      rShort("mdw.d"), "Depth of Modwheel MIDI Control"),
     rToggle(modwheel.exponential,  rShort("mdw.exp"), "Modwheel Exponential Mode"),
     rToggle(pitchwheel.is_split,   "If PitchWheel Has unified bendrange or not"),
-    rParamI(pitchwheel.bendrange, "Range of MIDI Pitch Wheel"),
+    rParamI(pitchwheel.bendrange,  rShort("pch.d"), "Range of MIDI Pitch Wheel"),
     rParamI(pitchwheel.bendrange_down, "Lower Range of MIDI Pitch Wheel"),
     rToggle(expression.receive, rShort("exp.rcv"), "Expression MIDI Receive"),
     rToggle(fmamp.receive,      rShort("fma.rcv"), "FM amplitude MIDI Receive"),
@@ -49,7 +49,7 @@ const rtosc::Ports Controller::ports = {
     rParamZyn(portamento.propDepth,     rShort("depth"), "Portamento proportional depth"),
     rParamZyn(portamento.pitchthresh,   rShort("thresh"), "Threshold for portamento"),
     rToggle(portamento.pitchthreshtype, rShort("tr.type"), "Type of threshold"),
-    rParamZyn(portamento.updowntimestretch, "UNDOCUMENTED"),
+    rParamZyn(portamento.updowntimestretch, rShort("up/dwn"), "Relative length of glide up vs glide down"),
     rParamZyn(resonancecenter.depth,    rShort("rfc.d"), "Resonance Center MIDI Depth"),
     rParamZyn(resonancebandwidth.depth, rShort("rbw.d"), "Resonance Bandwidth MIDI Depth"),
     rToggle(NRPN.receive, "NRPN MIDI Enable"),
diff --git a/src/Params/PADnoteParameters.cpp b/src/Params/PADnoteParameters.cpp
index 86fd0214..41063fc2 100644
--- a/src/Params/PADnoteParameters.cpp
+++ b/src/Params/PADnoteParameters.cpp
@@ -62,7 +62,7 @@ static const rtosc::Ports realtime_ports =
     rParamZyn(PfixedfreqET, rShort("f.ET"),   "Equal temeperate control for fixed frequency operation"),
     rParamZyn(PBendAdjust,          "Pitch bend adjustment"),
     rParamZyn(POffsetHz,    rShort("offset"), "Voice constant offset"),
-    rParamI(PDetune,        rShort("fine"),   "Fine Detune"),
+    rParamI(PDetune,        rShort("fine"), rLinear(0, 16383), "Fine Detune"),
     rParamI(PCoarseDetune,  rShort("coarse"), "Coarse Detune"),
     rParamZyn(PDetuneType,  rShort("type"),
             rOptions(L35cents, L10cents, E100cents, E1200cents),
diff --git a/src/Params/SUBnoteParameters.cpp b/src/Params/SUBnoteParameters.cpp
index 81c5f152..705db1c8 100644
--- a/src/Params/SUBnoteParameters.cpp
+++ b/src/Params/SUBnoteParameters.cpp
@@ -40,7 +40,7 @@ static const rtosc::Ports SUBnotePorts = {
     rParamZyn(PVolume,  rShort("volume"), "Volume"),
     rParamZyn(PPanning, rShort("panning"), "Left Right Panning"),
     rParamZyn(PAmpVelocityScaleFunction, rShort("sense"), "Amplitude Velocity Sensing function"),
-    rParamI(PDetune,       rShort("detune"), "Detune in detune type units"),
+    rParamI(PDetune,       rShort("detune"), rLinear(0, 16383), "Detune in detune type units"),
     rParamI(PCoarseDetune, rShort("cdetune"), "Coarse Detune"),
     //Real values needed
     rOption(PDetuneType,               rShort("det. scl."), rOptions(100 cents, 200 cents, 500 cents), "Detune Scale"),
-- 
2.47.0

