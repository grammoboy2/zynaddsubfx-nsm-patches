From 8ac8761c36f3e1efcf133f23a3e5a347c4493c0b Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Wed, 18 Jun 2014 12:19:00 -0400
Subject: [PATCH 0189/1936] Roll off Out of Bounds SUBnote Filters

Silence SUBnote filters outside 20 Hz -> (nyquist-200Hz)
This reduces the chances of loud pops that occur with very low
or very high frequency filters which are numerically very marginally
stable.
While not free, this is relatively low cost compared to various alternatives.

Part of the Christopher Oliver patch set.
---
 src/Synth/SUBnote.cpp | 32 ++++++++++++++++++++++++++++----
 src/Synth/SUBnote.h   |  4 ++++
 2 files changed, 32 insertions(+), 4 deletions(-)

diff --git a/src/Synth/SUBnote.cpp b/src/Synth/SUBnote.cpp
index c8a41431..6c614471 100644
--- a/src/Synth/SUBnote.cpp
+++ b/src/Synth/SUBnote.cpp
@@ -107,8 +107,6 @@ void SUBnote::setup(float freq,
     for(int n = 0; n < MAX_SUB_HARMONICS; ++n) {
         if(pars->Phmag[n] == 0)
             continue;
-        if(basefreq * pars->POvertoneFreqMult[n] > synth->samplerate_f / 2.0f)
-            break;                            //remove the freqs above the Nyquist freq
         pos[harmonics++] = n;
     }
     if(!legato)
@@ -138,6 +136,8 @@ void SUBnote::setup(float freq,
 
     for(int n = 0; n < numharmonics; ++n) {
         float freq =  basefreq * pars->POvertoneFreqMult[pos[n]];
+        overtone_freq[n] = freq;
+        overtone_rolloff[n] = computerolloff(freq);
 
         //the bandwidth is not absolute(Hz); it is relative to frequency
         float bw =
@@ -388,6 +388,25 @@ void SUBnote::initparameters(float freq)
     computecurrentparameters();
 }
 
+/*
+ * Compute how much to reduce amplitude near nyquist or subaudible frequencies.
+ */
+float SUBnote::computerolloff(float freq)
+{
+    const float lower_limit = 10.0f;
+    const float lower_width = 10.0f;
+    const float upper_width = 200.0f;
+    float upper_limit = synth->samplerate / 2.0f;
+
+    if (freq > lower_limit + lower_width &&
+            freq < upper_limit - upper_width)
+        return 1.0f;
+    if (freq <= lower_limit || freq >= upper_limit)
+        return 0.0f;
+    if (freq <= lower_limit + lower_width)
+        return (1.0f - cosf(M_PI * (freq - lower_limit) / lower_width)) / 2.0f;
+    return (1.0f - cosf(M_PI * (freq - upper_limit) / upper_width)) / 2.0f;
+}
 
 /*
  * Compute Parameters of SUBnote for each tick
@@ -422,6 +441,9 @@ void SUBnote::computecurrentparameters()
 
         float tmpgain = 1.0f / sqrt(envbw * envfreq);
 
+        for(int n = 0; n < numharmonics; ++n) {
+            overtone_rolloff[n] = computerolloff(overtone_freq[n] * envfreq);
+        }
         for(int n = 0; n < numharmonics; ++n)
             for(int nph = 0; nph < numstages; ++nph) {
                 if(nph == 0)
@@ -489,11 +511,12 @@ int SUBnote::noteout(float *outl, float *outr)
     for(int i = 0; i < synth->buffersize; ++i)
         tmprnd[i] = RND * 2.0f - 1.0f;
     for(int n = 0; n < numharmonics; ++n) {
+        float rolloff = overtone_rolloff[n];
         memcpy(tmpsmp, tmprnd, synth->bufferbytes);
         for(int nph = 0; nph < numstages; ++nph)
             filter(lfilter[nph + n * numstages], tmpsmp);
         for(int i = 0; i < synth->buffersize; ++i)
-            outl[i] += tmpsmp[i];
+            outl[i] += tmpsmp[i] * rolloff;
     }
 
     if(GlobalFilterL != NULL)
@@ -504,11 +527,12 @@ int SUBnote::noteout(float *outl, float *outr)
         for(int i = 0; i < synth->buffersize; ++i)
             tmprnd[i] = RND * 2.0f - 1.0f;
         for(int n = 0; n < numharmonics; ++n) {
+            float rolloff = overtone_rolloff[n];
             memcpy(tmpsmp, tmprnd, synth->bufferbytes);
             for(int nph = 0; nph < numstages; ++nph)
                 filter(rfilter[nph + n * numstages], tmpsmp);
             for(int i = 0; i < synth->buffersize; ++i)
-                outr[i] += tmpsmp[i];
+                outr[i] += tmpsmp[i] * rolloff;
         }
         if(GlobalFilterR != NULL)
             GlobalFilterR->filterout(&outr[0]);
diff --git a/src/Synth/SUBnote.h b/src/Synth/SUBnote.h
index cd95b810..87e1e93a 100644
--- a/src/Synth/SUBnote.h
+++ b/src/Synth/SUBnote.h
@@ -91,6 +91,7 @@ class SUBnote:public SynthNote
                         float bw,
                         float amp,
                         float mag);
+        float computerolloff(float freq);
         void computefiltercoefs(bpfilter &filter,
                                 float freq,
                                 float bw,
@@ -99,6 +100,9 @@ class SUBnote:public SynthNote
 
         bpfilter *lfilter, *rfilter;
 
+        float overtone_rolloff[MAX_SUB_HARMONICS];
+        float overtone_freq[MAX_SUB_HARMONICS];
+
         Controller *ctl;
         int   oldpitchwheel, oldbandwidth;
         float globalfiltercenterq;
-- 
2.47.0

