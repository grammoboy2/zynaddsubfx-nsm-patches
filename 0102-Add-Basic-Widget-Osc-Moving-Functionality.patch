From 79af20aaae1c91d3c0441ab71764a1ca2792300c Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Tue, 6 Aug 2013 13:08:18 -0400
Subject: [PATCH 0102/1936] Add Basic Widget Osc Moving Functionality

- This generates some regression in the display of oscillator information, but
  it does achieve the intended functionality as shown in the formant filter user
  interface
- Some minor bugs were fixed in Fl_Osc_Check/Fl_Osc_Slider as they seemed to
  miss some of the observed updates
---
 src/Misc/MiddleWare.cpp             | 12 ++++-
 src/UI/ADnoteUI.fl                  | 16 +++---
 src/UI/CMakeLists.txt               |  1 +
 src/UI/EnvelopeUI.fl                | 12 ++---
 src/UI/FilterUI.fl                  | 11 +++--
 src/UI/Fl_Osc_Check.H               |  2 +-
 src/UI/Fl_Osc_Check.cpp             |  8 ++-
 src/UI/Fl_Osc_Dial.H                |  2 -
 src/UI/Fl_Osc_Dial.cpp              | 10 ++--
 src/UI/Fl_Osc_DialF.cpp             |  2 +-
 src/UI/Fl_Osc_Pane.H                | 53 +++++++-------------
 src/UI/Fl_Osc_Pane.cpp              | 76 +++++++++++++++++++++++++++++
 src/UI/Fl_Osc_Slider.H              |  1 +
 src/UI/Fl_Osc_Slider.cpp            |  5 ++
 src/UI/Fl_Osc_Widget.H              |  8 ++-
 src/UI/Fl_Osc_Widget.cpp            | 11 ++++-
 src/UI/Fl_OscilSpectrum.h           |  3 +-
 src/UI/Fl_Oscilloscope.h            |  6 ++-
 src/UI/Fl_PADnoteHarmonicProfile.h  |  2 +-
 src/UI/Fl_PADnoteOvertonePosition.h |  2 +-
 src/UI/FormantFilterGraph.cpp       |  4 --
 src/UI/LFOUI.fl                     |  2 +-
 src/UI/MasterUI.fl                  |  2 +-
 src/UI/OscilGenUI.fl                |  4 +-
 src/UI/PADnoteUI.fl                 |  4 +-
 src/UI/SUBnoteUI.fl                 | 14 +++---
 26 files changed, 185 insertions(+), 88 deletions(-)
 create mode 100644 src/UI/Fl_Osc_Pane.cpp

diff --git a/src/Misc/MiddleWare.cpp b/src/Misc/MiddleWare.cpp
index 1ff607c8..99273473 100644
--- a/src/Misc/MiddleWare.cpp
+++ b/src/Misc/MiddleWare.cpp
@@ -572,6 +572,14 @@ class UI_Interface:public Fl_Osc_Interface
             map.insert(std::pair<string,Fl_Osc_Widget*>(s,w));
         }
 
+        void renameLink(string old, string newer, Fl_Osc_Widget *w) override
+        {
+            fprintf(stderr, "renameLink('%s','%s',%p)\n",
+                    old.c_str(), newer.c_str(), w);
+            removeLink(old, w);
+            createLink(newer, w);
+        }
+
         void removeLink(string s, class Fl_Osc_Widget*w) override
         {
             for(auto i = map.begin(); i != map.end(); ++i) {
@@ -606,7 +614,7 @@ class UI_Interface:public Fl_Osc_Interface
         {
 
             if(strcmp(msg, "/vu-meter"))//Ignore repeated message
-                printf("trying the link for a '%s'\n", msg);
+                printf("trying the link for a '%s'<%s>\n", msg, rtosc_argument_string(msg));
             const char *handle = rindex(msg,'/');
             if(handle)
                 ++handle;
@@ -643,6 +651,8 @@ class UI_Interface:public Fl_Osc_Interface
                         //fprintf(stderr, "tossing char to %p\n", pair.second);
                         pair.second->OSC_value((float)rtosc_argument(msg,0).f,
                                 handle);
+                    } else if(!strcmp(arg_str, "T") || !strcmp(arg_str, "F")) {
+                        pair.second->OSC_value((bool)rtosc_argument(msg,0).T, handle);
                     }
                 }
             }
diff --git a/src/UI/ADnoteUI.fl b/src/UI/ADnoteUI.fl
index b2e9704e..3e00016e 100644
--- a/src/UI/ADnoteUI.fl
+++ b/src/UI/ADnoteUI.fl
@@ -84,7 +84,7 @@ class ADvoicelistitem {open : {public Fl_Osc_Group}
     } {
       Fl_Box {} {
         xywh {0 0 0 0}
-        code0 {ADnoteVoiceListItem->pane_name = loc;}
+        code0 {ADnoteVoiceListItem->base = loc;}
       }
       Fl_Group voicelistitemgroup {open
         private xywh {50 0 570 25}
@@ -215,7 +215,7 @@ class ADvoiceUI {open : {public Fl_Group}
       Fl_Box {} {
         label label selected
         xywh {25 25 35 16}
-        code0 {ADnoteVoiceParameters->pane_name = loc;}
+        code0 {ADnoteVoiceParameters->base = loc;}
         code1 {ADnoteVoiceParameters->osc = osc_i;}
       }
       Fl_Group voiceparametersgroup {open
@@ -328,7 +328,7 @@ o->redraw();}
                 xywh {535 440 220 140} box THIN_DOWN_BOX color 32 selection_color 71 labelcolor 179
                 code0 {oscFM=new Fl_Oscilloscope(o->x(),o->y(),o->w(),o->h(),"");}
                 code1 {//int nv=nvoice; if (pars->VoicePar[nvoice].PextFMoscil>=0) nv=pars->VoicePar[nvoice].PextFMoscil;}
-                code2 {fmoscil->pane_name = loc+"mod-oscil/";fmoscil->osc = osc_i;}
+                code2 {fmoscil->base = loc; fmoscil->ext="mod-oscil/";fmoscil->osc = osc_i;}
                 code3 {oscFM->parent(fmoscil);oscFM->init(false);oscFM->update();}
                 class Fl_Osc_Group
               } {}
@@ -512,7 +512,7 @@ o->redraw();}
           Fl_Group voiceoscil {
             xywh {80 390 445 145} box THIN_DOWN_BOX color 32 selection_color 71 labelcolor 179
             code0 {osc=new Fl_Oscilloscope(o->x(),o->y(),o->w(),o->h(),"");}
-            code1 {voiceoscil->pane_name = loc+"oscil/";//int nv=nvoice; if (pars->VoicePar[nvoice].Pextoscil>=0) nv=pars->VoicePar[nvoice].Pextoscil;}
+            code1 {voiceoscil->base = loc;voiceoscil->ext="oscil/";//int nv=nvoice; if (pars->VoicePar[nvoice].Pextoscil>=0) nv=pars->VoicePar[nvoice].Pextoscil;}
             code2 {voiceoscil->osc = osc_i;}
             code3 {osc->parent(voiceoscil); osc->init(false);}
             class Fl_Osc_Group
@@ -834,7 +834,7 @@ class ADnoteUI {open : {public PresetsUI_}
     } {
       Fl_Box {} {
         xywh {0 0 0 0}
-        code0 {ADnoteGlobalParameters->pane_name = loc + "global/"; ADnoteGlobalParameters->osc = osc;}
+        code0 {ADnoteGlobalParameters->base = loc + "global/"; ADnoteGlobalParameters->osc = osc;}
       }
       Fl_Group {} {
         label FREQUENCY open
@@ -1036,7 +1036,7 @@ resui->resonancewindow->show();}
     } {
       Fl_Box {} {
         xywh {0 0 0 0}
-        code0 {ADnoteVoice->pane_name = loc;}
+        code0 {ADnoteVoice->base = loc;}
         code1 {ADnoteVoice->osc       = osc;}
       }
       Fl_Group advoice {open
@@ -1082,8 +1082,8 @@ ADnoteVoice->redraw();}
     } {
       Fl_Box {} {
         xywh {0 0 0 0}
-        code0 {ADnoteVoiceList->pane_name = loc;}
-        code1 {ADnoteVoiceList->osc       = osc;}
+        code0 {ADnoteVoiceList->base = loc;}
+        code1 {ADnoteVoiceList->osc  = osc;}
       }
       Fl_Text_Display {} {
         label {No.}
diff --git a/src/UI/CMakeLists.txt b/src/UI/CMakeLists.txt
index 4d7b871b..10a47f56 100644
--- a/src/UI/CMakeLists.txt
+++ b/src/UI/CMakeLists.txt
@@ -34,6 +34,7 @@ add_library(zynaddsubfx_gui STATIC
 	${zynaddsubfx_gui_FLTK_UI_SRCS}
         NioUI.cpp
         WidgetPDial.cpp
+        Fl_Osc_Pane.cpp
         Fl_Osc_Widget.cpp
         Fl_Osc_Dial.cpp
         Fl_Osc_DialF.cpp
diff --git a/src/UI/EnvelopeUI.fl b/src/UI/EnvelopeUI.fl
index c7c66ee3..f02cc63d 100644
--- a/src/UI/EnvelopeUI.fl
+++ b/src/UI/EnvelopeUI.fl
@@ -81,7 +81,7 @@ delete (freemodeeditwindow);} {}
         label C
         callback {/*presetsui->copy(env);*/}
         xywh {465 160 15 15} box THIN_UP_BOX color 179 labelfont 1 labelsize 10 labelcolor 7
-        code0 {freemodeeditwindow->osc = osc; freemodeeditwindow->pane_name = loc;}
+        code0 {freemodeeditwindow->osc = osc; freemodeeditwindow->base = loc;}
       }
       Fl_Button {} {
         label P
@@ -191,7 +191,7 @@ envfree->redraw();}
           label P
           callback {/*presetsui->paste(env,this);*/}
           xywh {167 5 15 15} box THIN_UP_BOX color 179 labelfont 1 labelsize 10 labelcolor 7
-          code0 {envADSR->osc = osc; envADSR->pane_name = loc;}
+          code0 {envADSR->osc = osc; envADSR->base = loc;}
         }
         Fl_Dial e1adt {
           label {A.dt}
@@ -262,7 +262,7 @@ envfree->redraw();}
           label C
           callback {/*presetsui->copy(env);*/}
           xywh {155 5 15 15} box THIN_UP_BOX color 179 labelfont 1 labelsize 10 labelcolor 7
-          code0 {envASR->osc = osc; envASR->pane_name = loc;}
+          code0 {envASR->osc = osc; envASR->base = loc;}
         }
         Fl_Button {} {
           label P
@@ -337,7 +337,7 @@ envfree->redraw();}
           label P
           callback {/*presetsui->paste(env,this);*/}
           xywh {237 5 15 15} box THIN_UP_BOX color 179 labelfont 1 labelsize 10 labelcolor 7
-          code0 {envADSRfilter->osc = osc; envADSRfilter->pane_name = loc;}
+          code0 {envADSRfilter->osc = osc; envADSRfilter->base = loc;}
         }
         Fl_Dial e3aval {
           label {A.val}
@@ -417,7 +417,7 @@ envfree->redraw();}
           label C
           callback {/*presetsui->copy(env);*/}
           xywh {155 5 15 15} box THIN_UP_BOX color 179 labelfont 1 labelsize 10 labelcolor 7
-          code0 {envASRbw->osc = osc; envASRbw->pane_name = loc;}
+          code0 {envASRbw->osc = osc; envASRbw->base = loc;}
         }
         Fl_Button {} {
           label P
@@ -488,7 +488,7 @@ envfree->redraw();}
           label E
           callback {freemodeeditwindow->show();}
           xywh {185 5 15 15} labelfont 1 labelsize 10
-          code0 {envfree->osc = osc; envfree->pane_name = loc;}
+          code0 {envfree->osc = osc; envfree->base = loc;}
         }
         Fl_Box freeeditsmall {
           label Envelope
diff --git a/src/UI/FilterUI.fl b/src/UI/FilterUI.fl
index 8f1484ed..c70e8ce6 100644
--- a/src/UI/FilterUI.fl
+++ b/src/UI/FilterUI.fl
@@ -38,6 +38,9 @@ decl {\#include <stdlib.h>} {private global
 decl {\#include "../globals.h"} {public local
 } 
 
+decl {\#include "../Misc/Util.h"} {public local
+} 
+
 decl {\#include <FL/Fl_Group.H>} {public local
 } 
 
@@ -85,7 +88,7 @@ delete (formantparswindow);} {}
         callback {/*presetsui->paste(pars,this);*/}
         xywh {203 5 15 15} box THIN_UP_BOX color 179 labelfont 1 labelsize 10 labelcolor 7
         code0 {filterui->osc = osc;}
-        code1 {filterui->pane_name = loc;}
+        code1 {filterui->base = loc;}
       }
       Fl_Group filterparamswindow {
         label {Filter Parameters}
@@ -251,7 +254,7 @@ delete (formantparswindow);} {}
         callback {/*presetsui->paste(pars,this,nvowel);*/}
         xywh {665 25 25 15} box THIN_UP_BOX color 179 labelfont 1 labelsize 11 labelcolor 7
         code0 {formantparswindow->osc = osc;}
-        code1 {formantparswindow->pane_name = loc;}
+        code1 {formantparswindow->base = loc;}
       }
       Fl_Group {} {open
         xywh {485 47 105 113} box THIN_UP_BOX
@@ -260,6 +263,7 @@ delete (formantparswindow);} {}
         Fl_Counter {} {
           label {Formant }
           callback {nformant=(int) o->value();
+          formantparsgroup->rebase(loc+"Pvowels"+to_s(nvowel)+"/Pformants"+to_s(nformant)+"/");
 update_formant_window();
 formantfiltergraph->redraw();}
           xywh {545 80 40 15} type Simple labelfont 1 labelsize 10 align 4 minimum 0 maximum 127 step 1 textsize 10
@@ -269,6 +273,7 @@ formantfiltergraph->redraw();}
         Fl_Counter {} {
           label {Vowel no.}
           callback {nvowel=(int) o->value();
+          formantparsgroup->rebase(loc+"Pvowels"+to_s(nvowel)+"/Pformants"+to_s(nformant)+"/");
 update_formant_window();
 formantfiltergraph->redraw();}
           xywh {545 55 40 20} type Simple labelfont 1 labelsize 10 align 4 minimum 0 maximum 127 step 1 textfont 1 textsize 11
@@ -282,7 +287,7 @@ formantfiltergraph->redraw();}
           Fl_Box {} {
             label dummy selected
             xywh {515 130 35 16} hide deactivate
-            code0 {formantparsgroup->pane_name += "Pvowels0/Pformants0/";}
+            code0 {formantparsgroup->ext = "Pvowels0/Pformants0/";}
           }
           Fl_Dial formant_freq_dial {
             label freq
diff --git a/src/UI/Fl_Osc_Check.H b/src/UI/Fl_Osc_Check.H
index e694a9c0..d717e96f 100644
--- a/src/UI/Fl_Osc_Check.H
+++ b/src/UI/Fl_Osc_Check.H
@@ -14,7 +14,7 @@ class Fl_Osc_Check:public Fl_Check_Button, public Fl_Osc_Widget
         //        const char *metadata);
 
         virtual ~Fl_Osc_Check(void);
-        virtual void OSC_value(bool);
+        virtual void OSC_value(bool) override;
         using Fl_Osc_Widget::OSC_value;
 
         void init(std::string loc, char type = 'T');
diff --git a/src/UI/Fl_Osc_Check.cpp b/src/UI/Fl_Osc_Check.cpp
index 57667491..4b0a5bb1 100644
--- a/src/UI/Fl_Osc_Check.cpp
+++ b/src/UI/Fl_Osc_Check.cpp
@@ -18,7 +18,10 @@ Fl_Osc_Check::~Fl_Osc_Check(void)
 
 void Fl_Osc_Check::OSC_value(bool v)
 {
-    Fl_Check_Button::value(v);
+    value(v);
+
+    if(cb_data.first)
+        cb_data.first(this, cb_data.second);
 }
 
 void Fl_Osc_Check::init(std::string path, char type)
@@ -34,6 +37,9 @@ void Fl_Osc_Check::cb(void)
         oscWrite(path, value() ? "T" : "F");
     else
         oscWrite(path, "c", value());
+
+    if(cb_data.first)
+        cb_data.first(this, cb_data.second);
 }
 
 void Fl_Osc_Check::update(void)
diff --git a/src/UI/Fl_Osc_Dial.H b/src/UI/Fl_Osc_Dial.H
index d34f23ca..ead57185 100644
--- a/src/UI/Fl_Osc_Dial.H
+++ b/src/UI/Fl_Osc_Dial.H
@@ -28,7 +28,5 @@ class Fl_Osc_Dial:public WidgetPDial, public Fl_Osc_Widget
 
         void cb(void);
     private:
-        std::string full_path;
-        std::string path;
         std::pair<Fl_Callback*, void*> cb_data;
 };
diff --git a/src/UI/Fl_Osc_Dial.cpp b/src/UI/Fl_Osc_Dial.cpp
index 3f57ebcc..d624ddce 100644
--- a/src/UI/Fl_Osc_Dial.cpp
+++ b/src/UI/Fl_Osc_Dial.cpp
@@ -34,8 +34,7 @@ Fl_Osc_Dial::Fl_Osc_Dial(int X, int Y, int W, int H, const char *label)
 void Fl_Osc_Dial::init(const char *path_)
 {
     assert(osc);
-    path = path_;
-    full_path = loc + path;
+    ext = path_;
     oscRegister(path_);
 };
         
@@ -46,7 +45,6 @@ void Fl_Osc_Dial::alt_init(std::string base, std::string path_)
     osc = pane->osc;
     assert(osc);
     loc  = base;
-    full_path = loc + path_;
     oscRegister(path_.c_str());
 }
 
@@ -71,7 +69,7 @@ void Fl_Osc_Dial::OSC_value(char v)
         
 void Fl_Osc_Dial::update(void)
 {
-    osc->requestValue(full_path);
+    osc->requestValue(loc+ext);
 }
 
 void Fl_Osc_Dial::cb(void)
@@ -79,9 +77,9 @@ void Fl_Osc_Dial::cb(void)
     assert(osc);
 
     if((maximum()-minimum()) == 127 || (maximum()-minimum()) == 255)
-        oscWrite(path, "c", (char)(value()-minimum()));
+        oscWrite(ext, "c", (char)(value()-minimum()));
     else
-        oscWrite(path, "i", (int)(value()-minimum()));
+        oscWrite(ext, "i", (int)(value()-minimum()));
     
     if(cb_data.first)
         cb_data.first(this, cb_data.second);
diff --git a/src/UI/Fl_Osc_DialF.cpp b/src/UI/Fl_Osc_DialF.cpp
index f5f5725e..29934707 100644
--- a/src/UI/Fl_Osc_DialF.cpp
+++ b/src/UI/Fl_Osc_DialF.cpp
@@ -47,7 +47,7 @@ void Fl_Osc_DialF::init(const char *path)
     Fl_Osc_Pane *pane = fetch_osc_pane(this);
     assert(pane);
     osc = pane->osc;
-    full_path = pane->pane_name + path;
+    full_path = pane->base + path;
     osc->createLink(full_path, this);
     osc->requestValue(full_path);
 };
diff --git a/src/UI/Fl_Osc_Pane.H b/src/UI/Fl_Osc_Pane.H
index 93b735a1..4806f17f 100644
--- a/src/UI/Fl_Osc_Pane.H
+++ b/src/UI/Fl_Osc_Pane.H
@@ -1,4 +1,5 @@
-#pragma once
+#ifndef FL_OSC_PANE_H
+#define FL_OSC_PANE_H
 #include <FL/Fl_Group.H>
 #include <FL/Fl_Double_Window.H>
 #include <string>
@@ -6,51 +7,33 @@
 class Fl_Osc_Pane
 {
     public:
-        Fl_Osc_Pane(void)
-            :osc(NULL), pane_name()
-        {}
+        Fl_Osc_Pane(void);
         class Fl_Osc_Interface *osc;
-        std::string pane_name;
+        std::string base;
+        virtual std::string loc(void) const = 0;
+        virtual void rebase(std::string new_base) = 0;
 };
 
 class Fl_Osc_Window:public Fl_Double_Window, public Fl_Osc_Pane
 {
     public:
-        Fl_Osc_Window(int w, int h, const char *L=0)
-            :Fl_Double_Window(w,h,L)
-        {}
-
-        void init(Fl_Osc_Interface *osc_, std::string loc_)
-        {
-            osc       = osc_;
-            pane_name = loc_;
-        }
-};
+        Fl_Osc_Window(int w, int h, const char *L=0);
 
-static Fl_Osc_Pane *find_osc_pane(Fl_Widget *root)
-{
-    if(!root)
-        return NULL;
-    Fl_Group *next = root->parent();
+        void init(Fl_Osc_Interface *osc_, std::string loc_);
+        std::string loc(void) const;
+        void rebase(std::string new_base);
+};
 
-    if(auto *p = dynamic_cast<Fl_Osc_Pane*>(next))
-        return p;
-    else
-        return find_osc_pane(next);
-}
 
 class Fl_Osc_Group:public Fl_Osc_Pane, public Fl_Group
 {
     public:
-        Fl_Osc_Group(int x, int y, int w, int h, const char *L=0)
-            :Fl_Group(x,y,w,h,L)
-        {
-            if(auto *p = find_osc_pane(this)) {
-                osc = p->osc;
-                pane_name = p->pane_name;
-                assert(osc);
-            }
-        };
-};
+        Fl_Osc_Group(int x, int y, int w, int h, const char *L=0);
+
+        std::string ext;
 
+        std::string loc(void) const;
+        void rebase(std::string new_base);
+};
+#endif
 
diff --git a/src/UI/Fl_Osc_Pane.cpp b/src/UI/Fl_Osc_Pane.cpp
new file mode 100644
index 00000000..fe9aec66
--- /dev/null
+++ b/src/UI/Fl_Osc_Pane.cpp
@@ -0,0 +1,76 @@
+#include "Fl_Osc_Pane.H"
+#include "Fl_Osc_Widget.H"
+#include <cassert>
+#include <cstdio>
+
+Fl_Osc_Pane::Fl_Osc_Pane(void)
+    :osc(NULL), base()
+{}
+
+
+Fl_Osc_Window::Fl_Osc_Window(int w, int h, const char *L)
+    :Fl_Double_Window(w,h,L)
+{}
+        
+void Fl_Osc_Window::init(Fl_Osc_Interface *osc_, std::string loc_)
+{
+    osc   = osc_;
+    base = loc_;
+}
+
+std::string Fl_Osc_Window::loc(void) const
+{
+    return base;
+}
+
+void Fl_Osc_Window::rebase(std::string new_base)
+{
+    unsigned nchildren = this->children();
+    for(unsigned i=0; i < nchildren; ++i) {
+        Fl_Widget *widget = this->child(i);
+        if(Fl_Osc_Widget *o = dynamic_cast<Fl_Osc_Widget*>(widget))
+            o->rebase(new_base);
+        if(dynamic_cast<Fl_Osc_Group*>(widget))
+            printf("Fl_Osc_Group\n");
+    }
+}
+
+static Fl_Osc_Pane *find_osc_pane(Fl_Widget *root)
+{
+    if(!root)
+        return NULL;
+    Fl_Group *next = root->parent();
+
+    if(auto *p = dynamic_cast<Fl_Osc_Pane*>(next))
+        return p;
+    else
+        return find_osc_pane(next);
+}
+
+Fl_Osc_Group::Fl_Osc_Group(int x, int y, int w, int h, const char *L)
+:Fl_Group(x,y,w,h,L)
+{
+    if(auto *p = find_osc_pane(this)) {
+        osc  = p->osc;
+        base = p->base;
+        assert(osc);
+    }
+};
+
+
+std::string Fl_Osc_Group::loc(void) const
+{
+    return base + ext;
+}
+
+void Fl_Osc_Group::rebase(std::string new_base)
+{
+    unsigned nchildren = this->children();
+    for(unsigned i=0; i < nchildren; ++i) {
+        Fl_Widget *widget = this->child(i);
+        if(Fl_Osc_Widget *o = dynamic_cast<Fl_Osc_Widget*>(widget))
+            o->rebase(new_base);
+        if(dynamic_cast<Fl_Osc_Group*>(widget))
+            printf("Fl_Osc_Group\n");
+    }
+}
diff --git a/src/UI/Fl_Osc_Slider.H b/src/UI/Fl_Osc_Slider.H
index 003ace96..59d0fc68 100644
--- a/src/UI/Fl_Osc_Slider.H
+++ b/src/UI/Fl_Osc_Slider.H
@@ -15,6 +15,7 @@ class Fl_Osc_Slider:public Fl_Slider, public Fl_Osc_Widget
 
         virtual ~Fl_Osc_Slider(void);
         void OSC_value(float);
+        void OSC_value(char);
         void init(std::string, char type = 'f');
 
         //Refetch parameter information
diff --git a/src/UI/Fl_Osc_Slider.cpp b/src/UI/Fl_Osc_Slider.cpp
index 35f68bbb..bece62c7 100644
--- a/src/UI/Fl_Osc_Slider.cpp
+++ b/src/UI/Fl_Osc_Slider.cpp
@@ -29,6 +29,11 @@ void Fl_Osc_Slider::OSC_value(float v)
     Fl_Slider::value(v+minimum());
 }
 
+void Fl_Osc_Slider::OSC_value(char v)
+{
+    Fl_Slider::value(v+minimum());
+}
+
 void Fl_Osc_Slider::cb(void)
 {
     const float val = Fl_Slider::value();
diff --git a/src/UI/Fl_Osc_Widget.H b/src/UI/Fl_Osc_Widget.H
index 28370c6d..ad665731 100644
--- a/src/UI/Fl_Osc_Widget.H
+++ b/src/UI/Fl_Osc_Widget.H
@@ -16,6 +16,7 @@ class Fl_Osc_Widget
 
         //Callback methods
         virtual void OSC_value(float);
+        virtual void OSC_value(bool);
         virtual void OSC_value(int);
         virtual void OSC_value(char);
         virtual void OSC_value(unsigned,void*);
@@ -30,13 +31,18 @@ class Fl_Osc_Widget
         //Raw messages
         virtual void OSC_raw(const char *);
         
-        
         //Widget methods
         void oscWrite(std::string path, const char *args, ...);
         void oscWrite(std::string path);
         void oscRegister(const char *path);
 
+        //Smoothly change the base path
+        void rebase(std::string new_base);
+
+        //Base path
         std::string loc;
+        //Extension
+        std::string ext;
         Fl_Osc_Interface *osc;
     protected:
         Fl_Osc_Pane *fetch_osc_pane(Fl_Widget *w);
diff --git a/src/UI/Fl_Osc_Widget.cpp b/src/UI/Fl_Osc_Widget.cpp
index 20cf47a4..9d84451d 100644
--- a/src/UI/Fl_Osc_Widget.cpp
+++ b/src/UI/Fl_Osc_Widget.cpp
@@ -10,7 +10,7 @@ Fl_Osc_Widget:: Fl_Osc_Widget(Fl_Widget *self)
     assert(fetch_osc_pane(self));
     if(auto *pane = fetch_osc_pane(self)) {
         osc = pane->osc;
-        loc = pane->pane_name;
+        loc = pane->loc();
     }
     assert(osc);
 }
@@ -22,6 +22,7 @@ Fl_Osc_Widget::~Fl_Osc_Widget(void)
 };
 
 void Fl_Osc_Widget::OSC_value(float) {}
+void Fl_Osc_Widget::OSC_value(bool) {}
 void Fl_Osc_Widget::OSC_value(int) {}
 void Fl_Osc_Widget::OSC_value(char) {}
 void Fl_Osc_Widget::OSC_value(unsigned,void*) {}
@@ -82,3 +83,11 @@ Fl_Osc_Pane *Fl_Osc_Widget::fetch_osc_pane(Fl_Widget *w)
         return pane;
     return fetch_osc_pane(w->parent());
 }
+
+
+void Fl_Osc_Widget::rebase(std::string new_base)
+{
+    osc->renameLink(loc+ext, new_base+ext, this);
+    loc = new_base;
+    osc->requestValue(loc+ext);
+}
diff --git a/src/UI/Fl_OscilSpectrum.h b/src/UI/Fl_OscilSpectrum.h
index ca171e46..268b2230 100644
--- a/src/UI/Fl_OscilSpectrum.h
+++ b/src/UI/Fl_OscilSpectrum.h
@@ -19,7 +19,7 @@ class Fl_OscilSpectrum : public Fl_Box, Fl_Osc_Widget
             Fl_Osc_Pane *og  = fetch_osc_pane(this);
             assert(og);
 
-            loc = og->pane_name + (base_spectrum_p ? "base-spectrum": "spectrum");
+            loc = og->base + (base_spectrum_p ? "base-spectrum": "spectrum");
             osc = og->osc;
             assert(osc);
 
@@ -34,7 +34,6 @@ class Fl_OscilSpectrum : public Fl_Box, Fl_Osc_Widget
 
         virtual void OSC_value(unsigned N, void *data) override
         {
-            fprintf(stderr, "(spec) OSC_value(%d,%p)\n", N, data);
             assert(!(N%4));
             const size_t new_samples = N / 4;
 
diff --git a/src/UI/Fl_Oscilloscope.h b/src/UI/Fl_Oscilloscope.h
index 153a96c8..09c505ba 100644
--- a/src/UI/Fl_Oscilloscope.h
+++ b/src/UI/Fl_Oscilloscope.h
@@ -35,16 +35,20 @@ class Fl_Oscilloscope : public Fl_Box, Fl_Osc_Widget
             Fl_Osc_Pane *og  = fetch_osc_pane(this);
             assert(og);
 
-            loc = og->pane_name + loc + (base_waveform_p ? "base-waveform": "waveform");
+            loc = og->base + loc + (base_waveform_p ? "base-waveform": "waveform");
             osc = og->osc;
             assert(osc);
 
+            printf("\n\n\n");
+            printf("HELLO I AM HIM AT ADDRESS '%s'\n", loc.c_str());
+            printf("\n\n\n");
             osc->createLink(loc, this);
             osc->requestValue(loc);
         }
 
         void update(void)
         {
+            printf("HELLO I AM HIM UPDATING AT ADDRESS '%s'\n", loc.c_str());
             osc->requestValue(loc);
         }
 
diff --git a/src/UI/Fl_PADnoteHarmonicProfile.h b/src/UI/Fl_PADnoteHarmonicProfile.h
index 05a1d595..e9b64134 100644
--- a/src/UI/Fl_PADnoteHarmonicProfile.h
+++ b/src/UI/Fl_PADnoteHarmonicProfile.h
@@ -19,7 +19,7 @@ class PADnoteHarmonicProfile: public Fl_Box, public Fl_Osc_Widget
             Fl_Osc_Pane *og  = fetch_osc_pane(this);
             assert(og);
 
-            loc = og->pane_name + "profile";
+            loc = og->base + "profile";
             osc = og->osc;
             assert(osc);
 
diff --git a/src/UI/Fl_PADnoteOvertonePosition.h b/src/UI/Fl_PADnoteOvertonePosition.h
index 76e1f6c2..c9836008 100644
--- a/src/UI/Fl_PADnoteOvertonePosition.h
+++ b/src/UI/Fl_PADnoteOvertonePosition.h
@@ -37,7 +37,7 @@ class PADnoteOvertonePosition: public Fl_Box, Fl_Osc_Widget
             Fl_Osc_Pane *og  = fetch_osc_pane(this);
             assert(og);
 
-            base_path = og->pane_name;
+            base_path = og->base;
             osc = og->osc;
             assert(osc);
 
diff --git a/src/UI/FormantFilterGraph.cpp b/src/UI/FormantFilterGraph.cpp
index e4b0dd37..71811357 100644
--- a/src/UI/FormantFilterGraph.cpp
+++ b/src/UI/FormantFilterGraph.cpp
@@ -300,10 +300,6 @@ void FormantFilterGraph::formantfilterH(int nvowel, int nfreqs, float *freqs)
         else
             freqs[i] = -90.0f;
     }
-
-    for(int i = 0; i < nfreqs; ++i) {
-        printf("[%d] => %f\n", i, freqs[i]);
-    }
 }
 
 /*
diff --git a/src/UI/LFOUI.fl b/src/UI/LFOUI.fl
index f764fc9e..39cdec1b 100644
--- a/src/UI/LFOUI.fl
+++ b/src/UI/LFOUI.fl
@@ -67,7 +67,7 @@ hide();} {}
         Fl_Dial freq {
           label {Freq.} selected
           tooltip {LFO Frequency} xywh {5 20 30 30} box ROUND_UP_BOX labelsize 10 step 1e-05
-          code0 {lfoparamswindow->osc=osc;lfoparamswindow->pane_name=loc;o->init("Pfreq");}
+          code0 {lfoparamswindow->osc=osc;lfoparamswindow->base=loc;o->init("Pfreq");}
           class Fl_Osc_DialF
         }
         Fl_Dial intensity {
diff --git a/src/UI/MasterUI.fl b/src/UI/MasterUI.fl
index b13d633d..c97ff462 100644
--- a/src/UI/MasterUI.fl
+++ b/src/UI/MasterUI.fl
@@ -512,7 +512,7 @@ if (result!=0) fl_alert("Error: Could not save the file.");}
         }
         Fl_Box dummy {
           code0 {win_root->osc = osc;}
-          code1 {win_root->pane_name = "/";}
+          code1 {win_root->base = "/";}
         }
         Fl_Dial mastervolumedial {
           label {Master Volume}
diff --git a/src/UI/OscilGenUI.fl b/src/UI/OscilGenUI.fl
index 9652bf4e..bd1848c7 100644
--- a/src/UI/OscilGenUI.fl
+++ b/src/UI/OscilGenUI.fl
@@ -247,7 +247,7 @@ class OscilEditor {open : {public PresetsUI_}
 //};}
           xywh {305 285 60 20} box THIN_UP_BOX labelfont 1
           code0 {if(adnotep) o->hide();}
-          code1 {dummy->pane_name = loc;}
+          code1 {dummy->base = loc;}
           code2 {dummy->osc = osc;}
         }
         Fl_Group oscildisplaygroup {open
@@ -338,7 +338,7 @@ redrawoscil();}
         }
         Fl_Group basefuncdisplaygroup {open
           xywh {370 10 360 300} box UP_FRAME
-          code0 {o->pane_name = loc;}
+          code0 {o->base = loc;}
           code1 {o->osc = osc;}
           code2 {assert(osc);}
           class Fl_Osc_Group
diff --git a/src/UI/PADnoteUI.fl b/src/UI/PADnoteUI.fl
index 5029e8ed..b58629cf 100644
--- a/src/UI/PADnoteUI.fl
+++ b/src/UI/PADnoteUI.fl
@@ -91,7 +91,7 @@ make_window();} {selected
     } {
 
       Fl_Box dummy {
-        code0 {padnotewindow->osc = osc_i; padnotewindow->pane_name = location;}
+        code0 {padnotewindow->osc = osc_i; padnotewindow->base = location;}
         code1 {puts("dummy setup done...");}
       }
       Fl_Tabs {} {
@@ -271,7 +271,7 @@ cbwidget->do_callback();}
           Fl_Group oscilgroup {open
             xywh {100 155 270 135} box THIN_DOWN_BOX color 32 selection_color 71 labelcolor 179 align 6
             code0 {osc=new Fl_Oscilloscope(o->x(),o->y(),o->w(),o->h(),"");}
-            code1 {oscilgroup->pane_name = location+"oscil/"; oscilgroup->osc = osc_i;osc->init(false);}
+            code1 {oscilgroup->base = location; oscilgroup->ext="oscil/"; oscilgroup->osc = osc_i;osc->init(false);}
             class Fl_Osc_Group
           } {}
           Fl_Button {} {
diff --git a/src/UI/SUBnoteUI.fl b/src/UI/SUBnoteUI.fl
index 84c6ee75..93589a85 100644
--- a/src/UI/SUBnoteUI.fl
+++ b/src/UI/SUBnoteUI.fl
@@ -131,17 +131,17 @@ if (Fl::event_button1()) x=127-(int)o->value();
 make_window();
 harmonic->show();
 
-osc->createLink(pane_name+"Phmag"+to_s(n), mag);
-osc->createLink(pane_name+"Phrelbw"+to_s(n), bw);
-osc->requestValue(pane_name+"Phmag"+to_s(n));
-osc->requestValue(pane_name+"Phrelbw"+to_s(n));
+osc->createLink(base+"Phmag"+to_s(n), mag);
+osc->createLink(base+"Phrelbw"+to_s(n), bw);
+osc->requestValue(base+"Phmag"+to_s(n));
+osc->requestValue(base+"Phrelbw"+to_s(n));
 
 end();} {}
   }
   Function {refresh()} {} {
     code {
-osc->requestValue(pane_name+"Phmag"+to_s(n));
-osc->requestValue(pane_name+"Phrelbw"+to_s(n));} {}
+osc->requestValue(base+"Phmag"+to_s(n));
+osc->requestValue(base+"Phrelbw"+to_s(n));} {}
   }
   Function {~SUBnoteharmonic()} {} {
     code {harmonic->hide();
@@ -163,7 +163,7 @@ class SUBnoteUI {open : {public PresetsUI_}
     } {
       Fl_Box {} {
         xywh {0 0 0 0} box FLAT_BOX color 45
-        code0 {SUBparameters->osc = osc; SUBparameters->pane_name = loc;}
+        code0 {SUBparameters->osc = osc; SUBparameters->base = loc;}
       }
       Fl_Scroll {} {
         label scroll open
-- 
2.47.0

