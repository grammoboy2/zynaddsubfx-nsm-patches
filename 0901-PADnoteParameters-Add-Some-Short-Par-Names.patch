From 2acf4261386dad374f24a05cf67fbfc87b025686 Mon Sep 17 00:00:00 2001
From: fundamental <mark.d.mccurry@gmail.com>
Date: Fri, 13 May 2016 11:53:40 -0400
Subject: [PATCH 0901/1936] PADnoteParameters: Add Some Short Par Names

---
 src/Params/PADnoteParameters.cpp | 45 ++++++++++++++++----------------
 1 file changed, 23 insertions(+), 22 deletions(-)

diff --git a/src/Params/PADnoteParameters.cpp b/src/Params/PADnoteParameters.cpp
index 67b71fb4..1276d6d1 100644
--- a/src/Params/PADnoteParameters.cpp
+++ b/src/Params/PADnoteParameters.cpp
@@ -18,6 +18,7 @@
 #include "../Synth/Resonance.h"
 #include "../Synth/OscilGen.h"
 #include "../Misc/WavFile.h"
+#include "../Misc/Time.h"
 #include <cstdio>
 
 #include <rtosc/ports.h>
@@ -136,30 +137,30 @@ static const rtosc::Ports non_realtime_ports =
     rRecurp(resonance, "Resonance"),
 
     //Harmonic Shape
-    rOption(Pmode, rMap(min, 0), rMap(max, 2), rOptions(bandwidth,discrete,continious),
+    rOption(Pmode, rMap(min, 0), rMap(max, 2), rShort("distribution"), rOptions(bandwidth,discrete,continious),
             "Harmonic Distribution Model"),
-    rOption(Php.base.type, rOptions(Gaussian, Rectanglar, Double Exponential),
+    rOption(Php.base.type, rOptions(Gaussian, Rectanglar, Double Exponential), rShort("shape"),
             "Harmonic profile shape"),
-    rParamZyn(Php.base.par1, "Harmonic shape distribution parameter"),
-    rParamZyn(Php.freqmult, "Frequency multiplier on distribution"),
-    rParamZyn(Php.modulator.par1, "Distribution modulator parameter"),
-    rParamZyn(Php.modulator.freq, "Frequency of modulator parameter"),
-    rParamZyn(Php.width, "Width of base harmonic"),
-    rOption(Php.amp.mode, rOptions(Sum, Mult, Div1, Div2),
+    rParamZyn(Php.base.par1, rShort("warp"),       "Harmonic shape distribution parameter"),
+    rParamZyn(Php.freqmult,  rShort("clone"),     "Frequency multiplier on distribution"),
+    rParamZyn(Php.modulator.par1, rShort("p1"),   "Distribution modulator parameter"),
+    rParamZyn(Php.modulator.freq, rShort("freq"), "Frequency of modulator parameter"),
+    rParamZyn(Php.width,     rShort("bandwidth"), "Width of base harmonic"),
+    rOption(Php.amp.mode,    rShort("mode"),      rOptions(Sum, Mult, Div1, Div2),
             "Amplitude harmonic multiplier type"),
 
     //Harmonic Modulation
-    rOption(Php.amp.type, rOptions(Off, Gauss, Sine, Flat),
+    rOption(Php.amp.type, rShort("mult"), rOptions(Off, Gauss, Sine, Flat),
             "Type of amplitude multipler"),
-    rParamZyn(Php.amp.par1, "Amplitude multiplier parameter"),
-    rParamZyn(Php.amp.par2, "Amplitude multiplier parameter"),
-    rToggle(Php.autoscale, "Autoscaling Harmonics"),
-    rOption(Php.onehalf,
+    rParamZyn(Php.amp.par1, rShort("p1"),   "Amplitude multiplier parameter"),
+    rParamZyn(Php.amp.par2, rShort("p2"),   "Amplitude multiplier parameter"),
+    rToggle(Php.autoscale,  rShort("auto"), "Autoscaling Harmonics"),
+    rOption(Php.onehalf, rShort("side"),
             rOptions(Full, Upper Half, Lower Half),
             "Harmonic cutoff model"),
 
     //Harmonic Bandwidth
-    rOption(Pbwscale,
+    rOption(Pbwscale, rShort("bw scale"),
             rOptions(Normal,
               EqualHz, Quater,
               Half, 75%, 150%,
@@ -171,23 +172,23 @@ static const rtosc::Ports non_realtime_ports =
             rOptions(Harmonic, ShiftU, ShiftL, PowerU, PowerL, Sine,
                 Power, Shift),
             "Harmonic Overtone shifting mode"),
-    rParamI(Phrpos.par1, rLinear(0,255), "Harmonic position parameter"),
-    rParamI(Phrpos.par2, rLinear(0,255), "Harmonic position parameter"),
-    rParamI(Phrpos.par3, rLinear(0,255), "Harmonic position parameter"),
+    rParamI(Phrpos.par1, rShort("p1"), rLinear(0,255), "Harmonic position parameter"),
+    rParamI(Phrpos.par2, rShort("p2"), rLinear(0,255), "Harmonic position parameter"),
+    rParamI(Phrpos.par3, rShort("p3"), rLinear(0,255), "Harmonic position parameter"),
 
     //Quality
-    rOption(Pquality.samplesize,
+    rOption(Pquality.samplesize, rShort("quality"),
             rOptions(16k (Tiny), 32k, 64k (Small), 128k,
               256k (Normal), 512k, 1M (Big)),
             "Size of each wavetable element"),
-    rOption(Pquality.basenote,
-            rOptions( C-2, G-2, C-3, G-3, C-4,
+    rOption(Pquality.basenote, rShort("basenote"),
+            rOptions(C-2, G-2, C-3, G-3, C-4,
                 G-4, C-5, G-5, G-6,),
             "Base note for wavetable"),
-    rOption(Pquality.smpoct,
+    rOption(Pquality.smpoct, rShort("smp/oct"),
             rOptions(0.5, 1, 2, 3, 4, 6, 12),
             "Samples per octave"),
-    rParamI(Pquality.oct, rLinear(0,7),
+    rParamI(Pquality.oct, rShort("octaves"), rLinear(0,7),
             "Number of octaves to sample (above the first sample"),
 
     {"Pbandwidth::i", rProp(parameter) rLinear(0,1000) rDoc("Bandwith Of Harmonics"), NULL,
-- 
2.47.0

